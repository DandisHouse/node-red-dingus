[
    {
        "id": "6fe20c4757d9d3bd",
        "type": "tab",
        "label": "Flow 1",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "subflow2",
        "type": "tab",
        "label": "Flow 2 - Logica",
        "disabled": true,
        "info": ""
    },
    {
        "id": "2c5c4f1d1a75144b",
        "type": "tab",
        "label": "flo0",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "4a7c072e91de67b7",
        "type": "tab",
        "label": "locat",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "3ddc41d7728b4948",
        "type": "tab",
        "label": "inventar master",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b1c56fddda3ae2eb",
        "type": "tab",
        "label": "Scan Panel",
        "disabled": false,
        "info": ""
    },
    {
        "id": "16bebc77a30e30c0",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Node-RED Dashboard",
            "hideToolbar": "true",
            "allowSwipe": "false",
            "lockMenu": "icon",
            "allowTempTheme": "none",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 70,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "5c2385eef514e664",
        "type": "ui_tab",
        "name": "Solar-Offer-Maker",
        "icon": "dashboard",
        "order": 8,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "5136337519e8310d",
        "type": "ui_group",
        "name": "Info Grabber.old",
        "tab": "5c2385eef514e664",
        "order": 1,
        "disp": true,
        "width": 6,
        "collapse": false,
        "className": ""
    },
    {
        "id": "be12146d67b1f521",
        "type": "gauth",
        "name": "solar-bot@solarbot-463413.iam.gserviceaccount.com"
    },
    {
        "id": "fde7ea0b57aa37c6",
        "type": "ui_tab",
        "name": "Rezultat",
        "icon": "dashboard",
        "order": 7,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "cdfc28c5cde621eb",
        "type": "ui_group",
        "name": "inverterselecter",
        "tab": "fde7ea0b57aa37c6",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "227fc93cb03386b0",
        "type": "ui_tab",
        "name": "ofiertator",
        "icon": "pan_tool",
        "order": 6,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "b2278266bff38fdf",
        "type": "ui_group",
        "name": "g1",
        "tab": "227fc93cb03386b0",
        "order": 1,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "a7d5d384526f2a1e",
        "type": "ui_tab",
        "name": "LOCAT",
        "icon": "dashboard",
        "order": 5,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "6014a4247775ebe7",
        "type": "ui_group",
        "name": "map shennanigans",
        "tab": "a7d5d384526f2a1e",
        "order": 2,
        "disp": true,
        "width": "8",
        "collapse": false,
        "className": ""
    },
    {
        "id": "4b2d2280023523c3",
        "type": "ui_tab",
        "name": "new",
        "icon": "explore",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "db1d4c6fa091cab3",
        "type": "ui_group",
        "name": "newmap",
        "tab": "4b2d2280023523c3",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "536ba574a1ccfa40",
        "type": "ui_spacer",
        "z": "4a7c072e91de67b7",
        "name": "spacer",
        "group": "6014a4247775ebe7",
        "order": 6,
        "width": 1,
        "height": 1
    },
    {
        "id": "4cbc4cc1198e821b",
        "type": "ui_spacer",
        "z": "4a7c072e91de67b7",
        "name": "spacer",
        "group": "6014a4247775ebe7",
        "order": 3,
        "width": 1,
        "height": 1
    },
    {
        "id": "d406e6cebf1171e3",
        "type": "ui_spacer",
        "z": "2c5c4f1d1a75144b",
        "name": "spacer",
        "group": "b2278266bff38fdf",
        "order": 40,
        "width": 1,
        "height": 1
    },
    {
        "id": "7b0694f50a1eddb3",
        "type": "ui_spacer",
        "z": "2c5c4f1d1a75144b",
        "name": "spacer",
        "group": "b2278266bff38fdf",
        "order": 28,
        "width": 1,
        "height": 1
    },
    {
        "id": "ccf7616410dd4251",
        "type": "ui_spacer",
        "z": "2c5c4f1d1a75144b",
        "name": "spacer",
        "group": "b2278266bff38fdf",
        "order": 30,
        "width": 1,
        "height": 1
    },
    {
        "id": "735446a846725be4",
        "type": "ui_spacer",
        "z": "2c5c4f1d1a75144b",
        "name": "spacer",
        "group": "b2278266bff38fdf",
        "order": 36,
        "width": 1,
        "height": 1
    },
    {
        "id": "a0bd048f9d151f2b",
        "type": "ui_spacer",
        "z": "2c5c4f1d1a75144b",
        "name": "spacer",
        "group": "b2278266bff38fdf",
        "order": 39,
        "width": 1,
        "height": 1
    },
    {
        "id": "4b74cc4d3e11a40f",
        "type": "ui_spacer",
        "z": "2c5c4f1d1a75144b",
        "name": "spacer",
        "group": "b2278266bff38fdf",
        "order": 43,
        "width": 1,
        "height": 1
    },
    {
        "id": "bfd913aac79a2e5d",
        "type": "ui_spacer",
        "z": "2c5c4f1d1a75144b",
        "name": "spacer",
        "group": "b2278266bff38fdf",
        "order": 45,
        "width": 1,
        "height": 1
    },
    {
        "id": "f3f6ed7c7296cc7e",
        "type": "ui_spacer",
        "z": "2c5c4f1d1a75144b",
        "name": "spacer",
        "group": "b2278266bff38fdf",
        "order": 48,
        "width": 1,
        "height": 1
    },
    {
        "id": "78b4611db9709f9e",
        "type": "ui_spacer",
        "z": "2c5c4f1d1a75144b",
        "name": "spacer",
        "group": "b2278266bff38fdf",
        "order": 49,
        "width": 1,
        "height": 1
    },
    {
        "id": "139cfb710d56422a",
        "type": "ui_spacer",
        "z": "2c5c4f1d1a75144b",
        "name": "spacer",
        "group": "b2278266bff38fdf",
        "order": 52,
        "width": 1,
        "height": 1
    },
    {
        "id": "fba75ac288c00e3d",
        "type": "ui_spacer",
        "z": "2c5c4f1d1a75144b",
        "name": "spacer",
        "group": "b2278266bff38fdf",
        "order": 24,
        "width": 2,
        "height": 1
    },
    {
        "id": "e482175ed430c539",
        "type": "ui_spacer",
        "z": "2c5c4f1d1a75144b",
        "name": "spacer",
        "group": "b2278266bff38fdf",
        "order": 22,
        "width": 2,
        "height": 1
    },
    {
        "id": "c68e78b86436eb63",
        "type": "ui_tab",
        "name": "worker",
        "icon": "serial",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "401690cd3bbc7586",
        "type": "ui_group",
        "name": "Inventar",
        "tab": "c68e78b86436eb63",
        "order": 1,
        "disp": true,
        "width": "24",
        "collapse": false,
        "className": ""
    },
    {
        "id": "f6ee704a113b5114",
        "type": "ui_spacer",
        "z": "3ddc41d7728b4948",
        "name": "spacer",
        "group": "401690cd3bbc7586",
        "order": 1,
        "width": 1,
        "height": 1
    },
    {
        "id": "1cc8d9b6207f5042",
        "type": "ui_spacer",
        "z": "3ddc41d7728b4948",
        "name": "spacer",
        "group": "401690cd3bbc7586",
        "order": 6,
        "width": 7,
        "height": 1
    },
    {
        "id": "b3b818756da4318e",
        "type": "ui_spacer",
        "z": "3ddc41d7728b4948",
        "name": "spacer",
        "group": "401690cd3bbc7586",
        "order": 7,
        "width": 1,
        "height": 1
    },
    {
        "id": "50f5cf7fdef04195",
        "type": "ui_spacer",
        "z": "3ddc41d7728b4948",
        "name": "spacer",
        "group": "401690cd3bbc7586",
        "order": 12,
        "width": 7,
        "height": 1
    },
    {
        "id": "2df82a4bbcb0fd51",
        "type": "ui_tab",
        "name": "Inventory",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "f872f36e4f84edb3",
        "type": "ui_group",
        "name": "Scan Controls",
        "tab": "2df82a4bbcb0fd51",
        "order": 1,
        "disp": true,
        "width": "16",
        "collapse": false,
        "className": ""
    },
    {
        "id": "inject-start",
        "type": "inject",
        "z": "6fe20c4757d9d3bd",
        "name": "Startup",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 120,
        "y": 20,
        "wires": [
            [
                "a9c1f2aa375d3b13",
                "d8b1a35f714bda26",
                "8d80ea980d98fb4b"
            ]
        ]
    },
    {
        "id": "parse-function",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "Dropdown Type",
        "func": "let raw = msg.payload;\nlet options = [];\n\nfor (let i = 0; i < raw.length; i++) {\n    let val = raw[i][0];\n    if (val) options.push(val);\n}\n\nmsg.payload = \"options\";\nmsg.options = options;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 300,
        "y": 340,
        "wires": [
            [
                "ui-dropdown"
            ]
        ]
    },
    {
        "id": "ui-dropdown",
        "type": "ui_dropdown",
        "z": "6fe20c4757d9d3bd",
        "name": "type",
        "label": "Tip Instalatie",
        "tooltip": "",
        "place": "Select option",
        "group": "5136337519e8310d",
        "order": 10,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "options",
        "topicType": "msg",
        "className": "",
        "x": 490,
        "y": 340,
        "wires": [
            [
                "60a125e8d0abc345",
                "bacc4f064fdbbf25"
            ]
        ]
    },
    {
        "id": "a9c1f2aa375d3b13",
        "type": "GSheet",
        "z": "6fe20c4757d9d3bd",
        "creds": "be12146d67b1f521",
        "method": "get",
        "action": "",
        "sheet": "1OKABJQ4YEo-wAlbCFOVMOCktMDan0y4-_meYFEodKus",
        "cells": "helper!A2:j10",
        "flatten": false,
        "name": "",
        "x": 130,
        "y": 480,
        "wires": [
            [
                "parse-function",
                "69de4e50d25a640e",
                "1a1e0c0ed0386de4",
                "89726c630e90a61c",
                "890fcb09aa153104",
                "d50525ef54f2ba0b",
                "2cd9878ae1b7b0c7",
                "1ba06cb15df37b89",
                "4e1a61a14f98abb9"
            ]
        ]
    },
    {
        "id": "d6828d7a66e40cba",
        "type": "ui_dropdown",
        "z": "6fe20c4757d9d3bd",
        "name": "bat",
        "label": "Baterie",
        "tooltip": "",
        "place": "",
        "group": "5136337519e8310d",
        "order": 11,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "options",
        "topicType": "msg",
        "className": "",
        "x": 530,
        "y": 400,
        "wires": [
            [
                "a3b99e1372451971"
            ]
        ]
    },
    {
        "id": "69de4e50d25a640e",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "Dropdown Battery",
        "func": "let raw = msg.payload;\nlet options = [];\n\nfor (let i = 0; i < raw.length; i++) {\n    let val = raw[i][6];\n    if (val) options.push(val);\n}\n\nmsg.payload = \"options\";\nmsg.options = options;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 400,
        "wires": [
            [
                "d6828d7a66e40cba"
            ]
        ]
    },
    {
        "id": "f27d5137ed10b6f4",
        "type": "ui_text_input",
        "z": "6fe20c4757d9d3bd",
        "name": "",
        "label": "Nume si Prenume",
        "tooltip": "",
        "group": "5136337519e8310d",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 390,
        "y": 20,
        "wires": [
            [
                "52e992ac590c2ed3"
            ]
        ]
    },
    {
        "id": "7183f122b8c0dffc",
        "type": "ui_text_input",
        "z": "6fe20c4757d9d3bd",
        "name": "",
        "label": "Adresa",
        "tooltip": "jud. oras. str. nr. bl. sc.",
        "group": "5136337519e8310d",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 360,
        "y": 60,
        "wires": [
            [
                "270f0d7f01794249"
            ]
        ]
    },
    {
        "id": "8cd5e838fa855c8a",
        "type": "ui_text_input",
        "z": "6fe20c4757d9d3bd",
        "name": "",
        "label": "e-mail",
        "tooltip": "",
        "group": "5136337519e8310d",
        "order": 3,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "email",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 350,
        "y": 100,
        "wires": [
            [
                "5b1f471db2dc1192"
            ]
        ]
    },
    {
        "id": "dce2c80ce527e8b9",
        "type": "ui_text_input",
        "z": "6fe20c4757d9d3bd",
        "name": "",
        "label": "Telefon",
        "tooltip": "+40",
        "group": "5136337519e8310d",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "tel",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 360,
        "y": 140,
        "wires": [
            [
                "1f976b93a966a653"
            ]
        ]
    },
    {
        "id": "9d897a9d86132b53",
        "type": "ui_switch",
        "z": "6fe20c4757d9d3bd",
        "name": "",
        "label": "Persoana Fizica?",
        "tooltip": "",
        "group": "5136337519e8310d",
        "order": 5,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "Persoana Fizica",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "Persoana Juridica",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 390,
        "y": 180,
        "wires": [
            [
                "f72bdaeae9ef0df0",
                "95fca157ec7a6b38"
            ]
        ]
    },
    {
        "id": "709d5469444559b4",
        "type": "ui_text_input",
        "z": "6fe20c4757d9d3bd",
        "name": "",
        "label": "RO********",
        "tooltip": "",
        "group": "5136337519e8310d",
        "order": 6,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 590,
        "y": 200,
        "wires": [
            [
                "78cc9fe2e66a35f4"
            ]
        ]
    },
    {
        "id": "f72bdaeae9ef0df0",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 1",
        "func": "if (msg.payload === \"Persoana Juridica\") {\n    return { payload: \"\", enabled: true };\n} else {\n    return { payload: \"\", enabled: false };\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 200,
        "wires": [
            [
                "709d5469444559b4"
            ]
        ]
    },
    {
        "id": "acf1ea0a5d361fc2",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 2",
        "func": "if (msg.payload === \"DA\") {\n    return { payload: \"\", enabled: true };\n} else {\n    return { payload: \"\", enabled: false };\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nreturn { payload: \"\", enabled: false };",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 280,
        "wires": [
            [
                "5c4e9a62cdca9dee",
                "746e4adf7ccea6f2"
            ]
        ]
    },
    {
        "id": "6154eaa3f79217f4",
        "type": "ui_switch",
        "z": "6fe20c4757d9d3bd",
        "name": "",
        "label": "Alta persoana de contact?",
        "tooltip": "",
        "group": "5136337519e8310d",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "DA",
        "onvalueType": "str",
        "onicon": "",
        "oncolor": "",
        "offvalue": "NU",
        "offvalueType": "str",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 410,
        "y": 240,
        "wires": [
            [
                "acf1ea0a5d361fc2"
            ]
        ]
    },
    {
        "id": "5c4e9a62cdca9dee",
        "type": "ui_text_input",
        "z": "6fe20c4757d9d3bd",
        "name": "",
        "label": "Nume",
        "tooltip": "",
        "group": "5136337519e8310d",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 610,
        "y": 260,
        "wires": [
            [
                "925dc30c3ab19ecd"
            ]
        ]
    },
    {
        "id": "746e4adf7ccea6f2",
        "type": "ui_text_input",
        "z": "6fe20c4757d9d3bd",
        "name": "",
        "label": "Telefon",
        "tooltip": "",
        "group": "5136337519e8310d",
        "order": 9,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "tel",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 620,
        "y": 300,
        "wires": [
            [
                "3d6f2023a6f572a3"
            ]
        ]
    },
    {
        "id": "d8b1a35f714bda26",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 3",
        "func": "// Code added here will be run once\n// whenever the node is started.\nreturn { payload: \"NU\", enabled: true };",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nreturn { payload: \"NU\", enabled: true };",
        "finalize": "",
        "libs": [],
        "x": 100,
        "y": 240,
        "wires": [
            [
                "6154eaa3f79217f4"
            ]
        ]
    },
    {
        "id": "29ad53c63992452f",
        "type": "ui_dropdown",
        "z": "6fe20c4757d9d3bd",
        "name": "branch",
        "label": "Bransament",
        "tooltip": "",
        "place": "Select option",
        "group": "5136337519e8310d",
        "order": 12,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "options",
        "topicType": "msg",
        "className": "",
        "x": 530,
        "y": 440,
        "wires": [
            [
                "d3d7ff2368354e69"
            ]
        ]
    },
    {
        "id": "1a1e0c0ed0386de4",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "Dropdown branch",
        "func": "let raw = msg.payload;\nlet options = [];\n\nfor (let i = 0; i < raw.length; i++) {\n    let val = raw[i][1];\n    if (val) options.push(val);\n}\n\nmsg.payload = \"options\";\nmsg.options = options;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 440,
        "wires": [
            [
                "29ad53c63992452f"
            ]
        ]
    },
    {
        "id": "8d80ea980d98fb4b",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 4",
        "func": "// Code added here will be run once\n// whenever the node is started.\nreturn { payload: \"Persoana Fizica\", enabled: true };",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nreturn { payload: \"Persoana Fizica\", enabled: true };",
        "finalize": "",
        "libs": [],
        "x": 100,
        "y": 180,
        "wires": [
            [
                "9d897a9d86132b53"
            ]
        ]
    },
    {
        "id": "60a125e8d0abc345",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 5",
        "func": "if (msg.payload !== \"ongrid\") {\n    return { payload: \"\", enabled: true };\n} else {\n    return { payload: \"\", enabled: false };\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 360,
        "wires": [
            [
                "d6828d7a66e40cba"
            ]
        ]
    },
    {
        "id": "030a8b9895b92c31",
        "type": "ui_text_input",
        "z": "6fe20c4757d9d3bd",
        "name": "",
        "label": "kW",
        "tooltip": "",
        "group": "5136337519e8310d",
        "order": 13,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 530,
        "y": 480,
        "wires": [
            [
                "a1f9d4b1cc18fecd"
            ]
        ]
    },
    {
        "id": "1cf26bbde5d13662",
        "type": "ui_dropdown",
        "z": "6fe20c4757d9d3bd",
        "name": "roof tp",
        "label": "Tip Acoperis",
        "tooltip": "",
        "place": "Select option",
        "group": "5136337519e8310d",
        "order": 16,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "options",
        "topicType": "msg",
        "className": "",
        "x": 490,
        "y": 640,
        "wires": [
            [
                "6459b47501694351",
                "78972d69b2cfc703"
            ]
        ]
    },
    {
        "id": "89726c630e90a61c",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "Dropdown roof tp",
        "func": "let raw = msg.payload;\nlet options = [];\n\nfor (let i = 0; i < raw.length; i++) {\n    let val = raw[i][3];\n    if (val) options.push(val);\n}\n\nmsg.payload = \"options\";\nmsg.options = options;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 640,
        "wires": [
            [
                "1cf26bbde5d13662"
            ]
        ]
    },
    {
        "id": "e8172189ac0cfb97",
        "type": "ui_text_input",
        "z": "6fe20c4757d9d3bd",
        "name": "",
        "label": "altceva",
        "tooltip": "",
        "group": "5136337519e8310d",
        "order": 17,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 580,
        "y": 700,
        "wires": [
            [
                "9b2f4b6f76cca922"
            ]
        ]
    },
    {
        "id": "6459b47501694351",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 7",
        "func": "if (msg.payload == \"altceva\") {\n    return { payload: \"\", enabled: true };\n} else  {\n    return { payload: \"\", enabled: false };\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nreturn { payload: \"\", enabled: false };",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 700,
        "wires": [
            [
                "e8172189ac0cfb97"
            ]
        ]
    },
    {
        "id": "63a58a7846c3dd1b",
        "type": "ui_dropdown",
        "z": "6fe20c4757d9d3bd",
        "name": "roof shp",
        "label": "Forma Acoperis",
        "tooltip": "",
        "place": "Select option",
        "group": "5136337519e8310d",
        "order": 18,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "options",
        "topicType": "msg",
        "className": "",
        "x": 500,
        "y": 760,
        "wires": [
            [
                "2e5a185b8532a81d",
                "0e6deb3bd28c6ba8"
            ]
        ]
    },
    {
        "id": "890fcb09aa153104",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "Dropdown roof shp",
        "func": "let raw = msg.payload;\nlet options = [];\n\nfor (let i = 0; i < raw.length; i++) {\n    let val = raw[i][4];\n    if (val) options.push(val);\n}\n\nmsg.payload = \"options\";\nmsg.options = options;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 760,
        "wires": [
            [
                "63a58a7846c3dd1b"
            ]
        ]
    },
    {
        "id": "f1b484f92019be60",
        "type": "ui_text_input",
        "z": "6fe20c4757d9d3bd",
        "name": "",
        "label": "altceva",
        "tooltip": "",
        "group": "5136337519e8310d",
        "order": 19,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 580,
        "y": 820,
        "wires": [
            [
                "52c2da97083907b3"
            ]
        ]
    },
    {
        "id": "2e5a185b8532a81d",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 8",
        "func": "if (msg.payload == \"altceva\") {\n    return { payload: \"\", enabled: true };\n} else  {\n    return { payload: \"\", enabled: false };\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nreturn { payload: \"\", enabled: false };",
        "finalize": "",
        "libs": [],
        "x": 440,
        "y": 820,
        "wires": [
            [
                "f1b484f92019be60"
            ]
        ]
    },
    {
        "id": "53c618a91a44ac23",
        "type": "ui_text_input",
        "z": "6fe20c4757d9d3bd",
        "name": "",
        "label": "Marime acoperis (mp)",
        "tooltip": "",
        "group": "5136337519e8310d",
        "order": 20,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 520,
        "y": 860,
        "wires": [
            [
                "7d83729be27bed56"
            ]
        ]
    },
    {
        "id": "d50525ef54f2ba0b",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "Dropdown station",
        "func": "let raw = msg.payload;\nlet options = [];\n\nfor (let i = 0; i < raw.length; i++) {\n    let val = raw[i][9];\n    if (val) options.push(val);\n}\n\nmsg.payload = \"options\";\nmsg.options = options;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 920,
        "wires": [
            [
                "ad5b91fa37946810"
            ]
        ]
    },
    {
        "id": "ad5b91fa37946810",
        "type": "ui_dropdown",
        "z": "6fe20c4757d9d3bd",
        "name": "charging station",
        "label": "Statie incarcare",
        "tooltip": "",
        "place": "Select option",
        "group": "5136337519e8310d",
        "order": 21,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "options",
        "topicType": "msg",
        "className": "",
        "x": 560,
        "y": 920,
        "wires": [
            [
                "93a52d7d415bd6e7"
            ]
        ]
    },
    {
        "id": "2cd9878ae1b7b0c7",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "Dropdown grounding",
        "func": "let raw = msg.payload;\nlet options = [];\n\nfor (let i = 0; i < raw.length; i++) {\n    let val = raw[i][7];\n    if (val) options.push(val);\n}\n\nmsg.payload = \"options\";\nmsg.options = options;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 980,
        "wires": [
            [
                "1ce0dcbd5f3dd2df"
            ]
        ]
    },
    {
        "id": "1ce0dcbd5f3dd2df",
        "type": "ui_dropdown",
        "z": "6fe20c4757d9d3bd",
        "name": "grounding",
        "label": "Impamantare",
        "tooltip": "",
        "place": "Select option",
        "group": "5136337519e8310d",
        "order": 22,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "options",
        "topicType": "msg",
        "className": "",
        "x": 540,
        "y": 980,
        "wires": [
            [
                "6898e3c3f33188b1",
                "cddc01740901a8d8"
            ]
        ]
    },
    {
        "id": "e5d776c767e1bd5d",
        "type": "ui_text_input",
        "z": "6fe20c4757d9d3bd",
        "name": "",
        "label": "Va trebui instalata impamantare?",
        "tooltip": "da sau nu",
        "group": "5136337519e8310d",
        "order": 23,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 540,
        "y": 1040,
        "wires": [
            [
                "ca9ef966d6db0b11"
            ]
        ]
    },
    {
        "id": "6898e3c3f33188b1",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 9",
        "func": "if (msg.payload == \"nu\") {\n    return { payload: \"\", enabled: true };\n} else  {\n    return { payload: \"\", enabled: false };\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nreturn { payload: \"\", enabled: false };",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1040,
        "wires": [
            [
                "e5d776c767e1bd5d"
            ]
        ]
    },
    {
        "id": "1ba06cb15df37b89",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "Dropdown fave inv",
        "func": "let raw = msg.payload;\nlet options = [];\n\nfor (let i = 0; i < raw.length; i++) {\n    let val = raw[i][5];\n    if (val) options.push(val);\n}\n\nmsg.payload = \"options\";\nmsg.options = options;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 1100,
        "wires": [
            [
                "aa039b65f0e4b33d"
            ]
        ]
    },
    {
        "id": "aa039b65f0e4b33d",
        "type": "ui_dropdown",
        "z": "6fe20c4757d9d3bd",
        "name": "fav inv",
        "label": "Brand preferat",
        "tooltip": "",
        "place": "Select option",
        "group": "5136337519e8310d",
        "order": 24,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "options",
        "topicType": "msg",
        "className": "",
        "x": 530,
        "y": 1100,
        "wires": [
            [
                "9a0ddd70f769a566",
                "9b3535b81bd73456"
            ]
        ]
    },
    {
        "id": "9a0ddd70f769a566",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 10",
        "func": "if (msg.payload == \"altceva\") {\n    return { payload: \"\", enabled: true };\n} else  {\n    return { payload: \"\", enabled: false };\n}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "// Code added here will be run once\n// whenever the node is started.\nreturn { payload: \"\", enabled: false };",
        "finalize": "",
        "libs": [],
        "x": 430,
        "y": 1140,
        "wires": [
            [
                "a8ccf38e551240c2"
            ]
        ]
    },
    {
        "id": "a8ccf38e551240c2",
        "type": "ui_text_input",
        "z": "6fe20c4757d9d3bd",
        "name": "",
        "label": "Brand?",
        "tooltip": "",
        "group": "5136337519e8310d",
        "order": 25,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 580,
        "y": 1140,
        "wires": [
            [
                "7626010a71772805"
            ]
        ]
    },
    {
        "id": "4e1a61a14f98abb9",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "Dropdown prosumer",
        "func": "let raw = msg.payload;\nlet options = [];\n\nfor (let i = 0; i < raw.length; i++) {\n    let val = raw[i][8];\n    if (val) options.push(val);\n}\n\nmsg.payload = \"options\";\nmsg.options = options;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1180,
        "wires": [
            [
                "a10d7429a7b633bc"
            ]
        ]
    },
    {
        "id": "a10d7429a7b633bc",
        "type": "ui_dropdown",
        "z": "6fe20c4757d9d3bd",
        "name": "prosumer",
        "label": "Dosar Prosumator?",
        "tooltip": "",
        "place": "Select option",
        "group": "5136337519e8310d",
        "order": 26,
        "width": 0,
        "height": 0,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "options",
        "topicType": "msg",
        "className": "",
        "x": 540,
        "y": 1180,
        "wires": [
            [
                "1e54dc824521ec7e"
            ]
        ]
    },
    {
        "id": "4cf535cb15d52f05",
        "type": "ui_button",
        "z": "6fe20c4757d9d3bd",
        "name": "",
        "group": "5136337519e8310d",
        "order": 26,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Trimite",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 550,
        "y": 1260,
        "wires": [
            [
                "543107f947ac0e50"
            ]
        ]
    },
    {
        "id": "1f976b93a966a653",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 11",
        "func": "flow.set(\"phone\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "5b1f471db2dc1192",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 12",
        "func": "flow.set(\"mail\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "270f0d7f01794249",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 13",
        "func": "flow.set(\"address\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "52e992ac590c2ed3",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 14",
        "func": "flow.set(\"name\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "95fca157ec7a6b38",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 15",
        "func": "flow.set(\"pf_or_cui\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "78cc9fe2e66a35f4",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 16",
        "func": "flow.set(\"cui?\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "925dc30c3ab19ecd",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 17",
        "func": "flow.set(\"contactname\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "3d6f2023a6f572a3",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 18",
        "func": "flow.set(\"contacttel\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "bacc4f064fdbbf25",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 19",
        "func": "flow.set(\"type\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "a3b99e1372451971",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 20",
        "func": "flow.set(\"battery\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "d3d7ff2368354e69",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 21",
        "func": "let branch = (msg.payload || \"\").trim();\nflow.set(\"branch\", branch);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 440,
        "wires": [
            [
                "2008f985d854a717"
            ]
        ]
    },
    {
        "id": "a1f9d4b1cc18fecd",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 22",
        "func": "flow.set(\"power_req\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "78972d69b2cfc703",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 25",
        "func": "flow.set(\"roof_structure\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 640,
        "wires": [
            []
        ]
    },
    {
        "id": "9b2f4b6f76cca922",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 26",
        "func": "flow.set(\"other_type\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "0e6deb3bd28c6ba8",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 27",
        "func": "flow.set(\"roof_shape\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "52c2da97083907b3",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 28",
        "func": "flow.set(\"what_shape\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "7d83729be27bed56",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 29",
        "func": "flow.set(\"roof_size\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "93a52d7d415bd6e7",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 30",
        "func": "flow.set(\"charging_station\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "cddc01740901a8d8",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 31",
        "func": "flow.set(\"grounding\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "ca9ef966d6db0b11",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 32",
        "func": "flow.set(\"well_then\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "9b3535b81bd73456",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 33",
        "func": "flow.set(\"desired_inverter\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "7626010a71772805",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 34",
        "func": "flow.set(\"which_one\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "1e54dc824521ec7e",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 35",
        "func": "flow.set(\"prosumer\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "543107f947ac0e50",
        "type": "function",
        "z": "6fe20c4757d9d3bd",
        "name": "function 36",
        "func": "let telefon = flow.get(\"phone\") || \"\";\nlet nume = flow.get(\"name\") || \"\";\nlet tipInstalatie = flow.get(\"type\") || \"\";\nlet adresa = flow.get(\"address\") || \"\";\nlet email = flow.get(\"mail\") || \"\";\nlet persoana = flow.get(\"pf_or_cui\") || \"\";\nlet cui = flow.get(\"cui?\") || \"\";\nlet contactNume = flow.get(\"contactname\") || \"\";\nlet contactTel = flow.get(\"contacttel\") || \"\";\nlet battery = flow.get(\"battery\") || \"\";\nlet branch = flow.get(\"branch\") || \"\";\nlet powerReq = flow.get(\"power_req\") || \"\";\nlet powerUpscale = flow.get(\"power_upscale\") || \"\";\nlet howManyKW = flow.get(\"how_many_kw\") || \"\";\nlet roofStruct = flow.get(\"roof_structure\") || \"\";\nlet otherType = flow.get(\"other_type\") || \"\";\nlet roofShape = flow.get(\"roof_shape\") || \"\";\nlet whatShape = flow.get(\"what_shape\") || \"\";\nlet roofSize = flow.get(\"roof_size\") || \"\";\nlet chargingStation = flow.get(\"charging_station\") || \"\";\nlet grounding = flow.get(\"grounding\") || \"\";\nlet wellThen = flow.get(\"well_then\") || \"\";\nlet desiredInv = flow.get(\"desired_inverter\") || \"\";\nlet whichOne = flow.get(\"which_one\") || \"\";\nlet prosumer = flow.get(\"prosumer\") || \"\";\n\n// PF sau CUI\nlet pfSauCui = (persoana === \"Persoana_Fizica\") ? \"PF\" : cui;\n\n// Genereaza offer-number\nlet now = new Date();\nlet yymmdd = now.toISOString().slice(2, 10).replace(/-/g, \"\");\nlet ultimele4 = telefon.slice(-4);\nlet offerNumber = `${yymmdd}-${ultimele4}`;\n\n// Pune toate in global\nglobal.set(\"telefon\", telefon);\nglobal.set(\"nume\", nume);\nglobal.set(\"tipInstalatie\", tipInstalatie);\nglobal.set(\"adresa\", adresa);\nglobal.set(\"email\", email);\nglobal.set(\"pfSauCui\", pfSauCui);\nglobal.set(\"contactNume\", contactNume);\nglobal.set(\"contactTel\", contactTel);\nglobal.set(\"battery\", battery);\nglobal.set(\"branch\", branch);\nglobal.set(\"powerReq\", powerReq);\nglobal.set(\"powerUpscale\", powerUpscale);\nglobal.set(\"howManyKW\", howManyKW);\nglobal.set(\"roofStruct\", roofStruct);\nglobal.set(\"otherType\", otherType);\nglobal.set(\"roofShape\", roofShape);\nglobal.set(\"whatShape\", whatShape);\nglobal.set(\"roofSize\", roofSize);\nglobal.set(\"chargingStation\", chargingStation);\nglobal.set(\"grounding\", grounding);\nglobal.set(\"wellThen\", wellThen);\nglobal.set(\"desiredInv\", desiredInv);\nglobal.set(\"whichOne\", whichOne);\nglobal.set(\"prosumer\", prosumer);\nglobal.set(\"offerNumber\", offerNumber);\n\n// Structura finala pt Google Sheet\nmsg.payload = [\n    nume,\n    adresa,\n    email,\n    telefon,\n    pfSauCui,\n    contactNume,\n    contactTel,\n    tipInstalatie,\n    battery,\n    branch,\n    powerReq,\n    powerUpscale,\n    howManyKW,\n    roofStruct,\n    otherType,\n    roofShape,\n    whatShape,\n    roofSize,\n    chargingStation,\n    grounding,\n    wellThen,\n    desiredInv,\n    whichOne,\n    prosumer,\n    offerNumber\n];\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 1260,
        "wires": [
            [
                "56b71f1f14320360"
            ]
        ]
    },
    {
        "id": "0daf977b0c9a61f9",
        "type": "GSheet",
        "z": "6fe20c4757d9d3bd",
        "creds": "be12146d67b1f521",
        "method": "append",
        "action": "",
        "sheet": "1OKABJQ4YEo-wAlbCFOVMOCktMDan0y4-_meYFEodKus",
        "cells": "DATAIN!A3:Y",
        "flatten": false,
        "name": "",
        "x": 1010,
        "y": 1260,
        "wires": [
            []
        ]
    },
    {
        "id": "56b71f1f14320360",
        "type": "link out",
        "z": "6fe20c4757d9d3bd",
        "name": "catre logica",
        "mode": "link",
        "links": [
            "linkin-logica"
        ],
        "x": 895,
        "y": 1340,
        "wires": []
    },
    {
        "id": "2008f985d854a717",
        "type": "debug",
        "z": "6fe20c4757d9d3bd",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 440,
        "wires": []
    },
    {
        "id": "linkin-logica",
        "type": "link in",
        "z": "subflow2",
        "name": "Primire Date",
        "links": [
            "56b71f1f14320360"
        ],
        "x": 25,
        "y": 60,
        "wires": [
            [
                "function-salt-tab",
                "3e56c9fab47abd4f"
            ]
        ]
    },
    {
        "id": "function-salt-tab",
        "type": "function",
        "z": "subflow2",
        "name": "Schimbare Tab",
        "func": "msg.payload = {\n    tab: \"Rezultat\"\n};\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 235,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "3e56c9fab47abd4f",
        "type": "GSheet",
        "z": "subflow2",
        "creds": "be12146d67b1f521",
        "method": "get",
        "action": "",
        "sheet": "1OKABJQ4YEo-wAlbCFOVMOCktMDan0y4-_meYFEodKus",
        "cells": "invertor!A2:l",
        "flatten": false,
        "name": "import invertor",
        "x": 280,
        "y": 140,
        "wires": [
            [
                "c0061cc4c567d5d7"
            ]
        ]
    },
    {
        "id": "47618d575e6f53a9",
        "type": "inject",
        "z": "subflow2",
        "name": "Test Start",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 100,
        "y": 300,
        "wires": [
            [
                "3e56c9fab47abd4f",
                "8c1ce83e3be5d001"
            ]
        ]
    },
    {
        "id": "d0971a11da966b22",
        "type": "function",
        "z": "subflow2",
        "name": "Filtrare stoc",
        "func": "msg.payload = msg.payload.filter(item => parseInt(item[10]) > 0);\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 300,
        "wires": [
            [
                "0db535c8f278dbbb"
            ]
        ]
    },
    {
        "id": "0db535c8f278dbbb",
        "type": "function",
        "z": "subflow2",
        "name": "putere",
        "func": "let putereMin = parseFloat(global.get(\"powerReq\")) || 0;\nlet payload = msg.payload || [];\n\nlet rezultat = [];\nlet gasitBranduri = {};\n\npayload.forEach(item => {\n    let brand = item[0].toLowerCase();\n    let putere = parseFloat(item[3]);\n\n    if (!isNaN(putere) && putere >= putereMin && !gasitBranduri[brand]) {\n        rezultat.push(item);\n        gasitBranduri[brand] = true;\n    }\n});\n\nmsg.payload = rezultat;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 340,
        "wires": [
            [
                "5b58648b1f1c0248"
            ]
        ]
    },
    {
        "id": "8c1ce83e3be5d001",
        "type": "GSheet",
        "z": "subflow2",
        "creds": "be12146d67b1f521",
        "method": "get",
        "action": "",
        "sheet": "1OKABJQ4YEo-wAlbCFOVMOCktMDan0y4-_meYFEodKus",
        "cells": "invertor!A1:l1",
        "flatten": false,
        "name": "import invertor",
        "x": 240,
        "y": 100,
        "wires": [
            [
                "b87610299120691a"
            ]
        ]
    },
    {
        "id": "b87610299120691a",
        "type": "ui_table",
        "z": "subflow2",
        "group": "cdfc28c5cde621eb",
        "name": "Header",
        "order": 1,
        "width": "0",
        "height": "0",
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 500,
        "y": 60,
        "wires": []
    },
    {
        "id": "c0061cc4c567d5d7",
        "type": "function",
        "z": "subflow2",
        "name": "filtru faza",
        "func": "let branch = global.get(\"branch\") || \"\";\n\n// Daca e monofazat => afiseaza doar monofazat\nif (branch === \"monofazat\") {\n    msg.payload = msg.payload.filter(item => item[5] === \"monofazat\");\n}\n// Daca e trifazat => afiseaza doar trifazat\nelse if (branch === \"trifazat\") {\n    msg.payload = msg.payload.filter(item => item[5] === \"trifazat\");\n}\n// Altfel => afiseaza tot\nelse {\n    // Nu facem nimic, lasam lista neschimbata\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 180,
        "wires": [
            [
                "47a667946c925045"
            ]
        ]
    },
    {
        "id": "29a518bbc9d90cbf",
        "type": "function",
        "z": "subflow2",
        "name": "filtru fav",
        "func": "let invertorupulii = (global.get(\"desiredInv\") || \"\").toLowerCase();\n\nif (invertorupulii === \"huawei\") {\n    // Doar huawei\n    msg.payload = msg.payload.filter(item => item[0].toLowerCase() === \"huawei\");\n} else if (invertorupulii !== \"\") {\n    // Întâi invertorul selectat\n    let list1 = msg.payload.filter(item => item[0].toLowerCase() === invertorupulii);\n\n    // Apoi huawei\n    let list2 = msg.payload.filter(item => item[0].toLowerCase() === \"huawei\");\n\n    // Combinăm listele\n    msg.payload = list1.concat(list2);\n} else {\n    // Dacă nu e selectat nimic, lăsăm lista neschimbată\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 260,
        "wires": [
            [
                "d0971a11da966b22"
            ]
        ]
    },
    {
        "id": "47a667946c925045",
        "type": "function",
        "z": "subflow2",
        "name": "filtru grid",
        "func": "let grid = global.get(\"tipInstalatie\") || \"\";\n\n// Daca e monofazat => afiseaza doar monofazat\nif (grid === \"ongrid\") {\n    msg.payload = msg.payload.filter(item => item[4] === \"ongrid\");\n}\n// Daca e trifazat => afiseaza doar trifazat\nelse if (grid === \"offgrid\") {\n    msg.payload = msg.payload.filter(item => item[4] === \"offgrid\");\n}\nelse if (grid === \"hibrid\") {\n    msg.payload = msg.payload.filter(item => item[4] === \"hibrid\");\n}\n// Altfel => afiseaza tot\nelse {\n    // Nu facem nimic, lasam lista neschimbata\n}\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 220,
        "wires": [
            [
                "29a518bbc9d90cbf"
            ]
        ]
    },
    {
        "id": "5b58648b1f1c0248",
        "type": "ui_table",
        "z": "subflow2",
        "group": "cdfc28c5cde621eb",
        "name": "Content",
        "order": 2,
        "width": "12",
        "height": "15",
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 480,
        "y": 340,
        "wires": []
    },
    {
        "id": "2515ca803027acad",
        "type": "inject",
        "z": "2c5c4f1d1a75144b",
        "name": "Startup",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 100,
        "y": 20,
        "wires": [
            [
                "683cde89345ad223",
                "a74748f1b70f2f3a",
                "6270a32f5144c9a3",
                "47c5ad468bd79c07",
                "17c984f712e505f8",
                "bd9242c659a39aa9"
            ]
        ]
    },
    {
        "id": "683cde89345ad223",
        "type": "GSheet",
        "z": "2c5c4f1d1a75144b",
        "creds": "be12146d67b1f521",
        "method": "get",
        "action": "",
        "sheet": "1OKABJQ4YEo-wAlbCFOVMOCktMDan0y4-_meYFEodKus",
        "cells": "helper!A1:x999",
        "flatten": false,
        "name": "helper",
        "x": 130,
        "y": 160,
        "wires": [
            [
                "2c240f800b73af54",
                "d66191c4705d28e1",
                "dd55daeabdccdb0f"
            ]
        ]
    },
    {
        "id": "6dc3fba45ffdb80d",
        "type": "ui_text_input",
        "z": "2c5c4f1d1a75144b",
        "name": "",
        "label": "Nume si prenume",
        "tooltip": "",
        "group": "b2278266bff38fdf",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 830,
        "y": 20,
        "wires": [
            []
        ]
    },
    {
        "id": "b1213aa79742ca96",
        "type": "ui_text",
        "z": "2c5c4f1d1a75144b",
        "group": "b2278266bff38fdf",
        "order": 2,
        "width": 1,
        "height": 3,
        "name": "",
        "label": "Adresa",
        "format": "{{msg.payload}}",
        "layout": "col-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 440,
        "y": 60,
        "wires": []
    },
    {
        "id": "e8f88c40a2299407",
        "type": "ui_dropdown",
        "z": "2c5c4f1d1a75144b",
        "name": "judet",
        "label": "",
        "tooltip": "",
        "place": "Judet",
        "group": "b2278266bff38fdf",
        "order": 3,
        "width": 3,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 590,
        "y": 100,
        "wires": [
            [
                "c2336d370c6ad830",
                "c7078590f70df487"
            ]
        ]
    },
    {
        "id": "2c240f800b73af54",
        "type": "function",
        "z": "2c5c4f1d1a75144b",
        "name": "jud",
        "func": "let queersearch = \"judet\"; // aici pui header-ul pe care îl cauți\nlet raw = msg.payload;\nlet options = [];\n\nlet headers = raw[0]; // primul rând e header-ul\nlet colIndex = headers.indexOf(queersearch); // caută indexul coloanei dorite\n\nif (colIndex === -1) {\n    node.error(\"Coloana cu numele '\" + queersearch + \"' nu a fost găsită!\");\n    return null;\n}\n\nfor (let i = 1; i < raw.length; i++) { // începi de la 1 că 0 e header-ul\n    let val = raw[i][colIndex];\n    if (val) options.push(val);\n}\n\n\nmsg.payload = \"options\";\nmsg.options = options;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 100,
        "wires": [
            [
                "e8f88c40a2299407"
            ]
        ]
    },
    {
        "id": "c7078590f70df487",
        "type": "function",
        "z": "2c5c4f1d1a75144b",
        "name": "mount",
        "func": "let judetCautat = msg.payload;  // valoarea selectată din dropdown\nlet raw = flow.get(\"TabelTT\");  // tabelul complet din sheet-ul t\n\nif (!judetCautat || judetCautat === \"\") {\n    msg.payload = \"-\";\n    return msg;\n}\n\nif (!raw) {\n    //node.error(\"Tabelul t nu a fost încărcat în context!\");\n    return null;\n}\n\nlet headers = raw[0];\nlet colJudet = headers.indexOf(\"judet\");\nlet colPosition = headers.indexOf(\"montaj\");\n\nif (colJudet === -1 || colPosition === -1) {\n  //  node.error(\"Header-ul 'judet' sau 'montaj' nu a fost găsit în tabel!\");\n    return null;\n}\n\nlet rezultat = null;\n\nfor (let i = 1; i < raw.length; i++) {\n    let rand = raw[i];\n    if (rand[colJudet] === judetCautat) {\n        rezultat = rand[colPosition];\n        break;\n    }\n}\n\nif (rezultat === null) {\n  //  node.warn(\"Nu s-a găsit județul '\" + judetCautat + \"' în tabel.\");\n    msg.payload = \"-\";\n    return msg;\n}\n\nmsg.payload = rezultat;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 180,
        "wires": [
            [
                "8fa7d602f9697787"
            ]
        ]
    },
    {
        "id": "66ce3603032daaf4",
        "type": "comment",
        "z": "2c5c4f1d1a75144b",
        "name": "info",
        "info": "nume prenume\njudet - oras - adresa\ne-mail - telefon\nalta persoana contact on-off\nnume - telefon\ntip orientare (multiple selection)\ncat curent se consuma intr-un an? kw\npower_req: valoarea de mai sus / 12000 - minim 3, camp editabil\nif power_req: >27, bif insularizare obligatore\ncamp insularizare\ngrid: dropdown\nbransament: phazetype\nif trifazxat - toggle on-off asincron - afisat doar daca trifazat\n\nacumulatori: toggle on-off\ndaca este ON - se filtreaza dupa COMPATIBILITATE\n\t-\tfiltram dupa compatibil daca da\nintrebam putere acumulatori si filtram sa eliminam cele care nu au puterea necesara\n\nzona smart",
        "x": 90,
        "y": 240,
        "wires": []
    },
    {
        "id": "a2e121bd4b3a676e",
        "type": "ui_text_input",
        "z": "2c5c4f1d1a75144b",
        "name": "strada",
        "label": "Strada",
        "tooltip": "",
        "group": "b2278266bff38fdf",
        "order": 4,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 710,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "a74748f1b70f2f3a",
        "type": "GSheet",
        "z": "2c5c4f1d1a75144b",
        "creds": "be12146d67b1f521",
        "method": "get",
        "action": "",
        "sheet": "1OKABJQ4YEo-wAlbCFOVMOCktMDan0y4-_meYFEodKus",
        "cells": "t!A1:bb999",
        "flatten": false,
        "name": "t",
        "x": 270,
        "y": 20,
        "wires": [
            [
                "117d5522a763c4e8"
            ]
        ]
    },
    {
        "id": "c2336d370c6ad830",
        "type": "function",
        "z": "2c5c4f1d1a75144b",
        "name": "search t",
        "func": "let queersearch = msg.payload;  // vine din dropdown judet\nlet raw = flow.get(\"TabelT\");   // acum corect ia tabelul t din context\n\nif (!raw) {\n   // node.error(\"Tabelul t nu a fost încărcat în context!\");\n    return null;\n}\n\nlet options = [];\nlet headers = raw[0];\nlet colIndex = headers.indexOf(queersearch);\n\nif (colIndex === -1) {\n  //  node.error(\"Coloana '\" + queersearch + \"' nu a fost găsită în tabelul t!\");\n    return null;\n}\n\nfor (let i = 1; i < raw.length; i++) {\n    let val = raw[i][colIndex];\n    if (val) options.push(val);\n}\n\nmsg.payload = \"options\";\nmsg.options = options;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 60,
        "wires": [
            [
                "70c056683cb20db9"
            ]
        ]
    },
    {
        "id": "70c056683cb20db9",
        "type": "ui_dropdown",
        "z": "2c5c4f1d1a75144b",
        "name": "oras",
        "label": "",
        "tooltip": "",
        "place": "Localitate",
        "group": "b2278266bff38fdf",
        "order": 5,
        "width": 3,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 770,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "117d5522a763c4e8",
        "type": "function",
        "z": "2c5c4f1d1a75144b",
        "name": "save t",
        "func": "flow.set(\"TabelT\", msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 20,
        "wires": [
            [
                "c2336d370c6ad830"
            ]
        ]
    },
    {
        "id": "8fa7d602f9697787",
        "type": "ui_text",
        "z": "2c5c4f1d1a75144b",
        "group": "b2278266bff38fdf",
        "order": 7,
        "width": 3,
        "height": 1,
        "name": "",
        "label": "Montaj posibil:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 720,
        "y": 180,
        "wires": []
    },
    {
        "id": "d66191c4705d28e1",
        "type": "function",
        "z": "2c5c4f1d1a75144b",
        "name": "save tt",
        "func": "flow.set(\"TabelTT\", msg.payload);\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 160,
        "wires": [
            [
                "c7078590f70df487"
            ]
        ]
    },
    {
        "id": "020c3f2777f16fe8",
        "type": "ui_text_input",
        "z": "2c5c4f1d1a75144b",
        "name": "",
        "label": "e-mail",
        "tooltip": "",
        "group": "b2278266bff38fdf",
        "order": 9,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "email",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 670,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "54483932b6be0c26",
        "type": "ui_text_input",
        "z": "2c5c4f1d1a75144b",
        "name": "",
        "label": "Telefon",
        "tooltip": "",
        "group": "b2278266bff38fdf",
        "order": 10,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "tel",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 780,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "fcc58807a003183b",
        "type": "ui_text_input",
        "z": "2c5c4f1d1a75144b",
        "name": "",
        "label": "nr",
        "tooltip": "",
        "group": "b2278266bff38fdf",
        "order": 6,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 730,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "848d689ec0b636d7",
        "type": "ui_text_input",
        "z": "2c5c4f1d1a75144b",
        "name": "",
        "label": "punct reper",
        "tooltip": "sau link locatie din google maps",
        "group": "b2278266bff38fdf",
        "order": 8,
        "width": 4,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 730,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "6270a32f5144c9a3",
        "type": "function",
        "z": "2c5c4f1d1a75144b",
        "name": "set ON",
        "func": "msg.payload = true;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 120,
        "y": 1100,
        "wires": [
            [
                "88ea80c2a17d8035",
                "32fb3288dd90bdad"
            ]
        ]
    },
    {
        "id": "47c5ad468bd79c07",
        "type": "function",
        "z": "2c5c4f1d1a75144b",
        "name": "set OFF",
        "func": "msg.payload = false;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 860,
        "wires": [
            [
                "e7cf0368ce68ce4b",
                "40963290f5b271a4",
                "c9dfb81496439194",
                "9b4e63a8afe11fab",
                "19c28cda84bc718e"
            ]
        ]
    },
    {
        "id": "ac9016759c20d4d2",
        "type": "ui_text_input",
        "z": "2c5c4f1d1a75144b",
        "name": "contactname",
        "label": "Nume",
        "tooltip": "",
        "group": "b2278266bff38fdf",
        "order": 12,
        "width": 3,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 970,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "a0bf5c4983e3a659",
        "type": "ui_text_input",
        "z": "2c5c4f1d1a75144b",
        "name": "contacttel",
        "label": "Telefon",
        "tooltip": "",
        "group": "b2278266bff38fdf",
        "order": 13,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "tel",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 980,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "e7cf0368ce68ce4b",
        "type": "ui_switch",
        "z": "2c5c4f1d1a75144b",
        "name": "",
        "label": "Alta persoana de contact?",
        "tooltip": "",
        "group": "b2278266bff38fdf",
        "order": 11,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 710,
        "y": 420,
        "wires": [
            [
                "e29ea2c3f6145396"
            ]
        ]
    },
    {
        "id": "e29ea2c3f6145396",
        "type": "function",
        "z": "2c5c4f1d1a75144b",
        "name": "enable/disable",
        "func": "if (msg.payload === true) {\n    return { payload: \"\", enabled: true };\n} else {\n    return { payload: \"\", enabled: false };\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 480,
        "wires": [
            [
                "ac9016759c20d4d2",
                "a0bf5c4983e3a659"
            ]
        ]
    },
    {
        "id": "dd55daeabdccdb0f",
        "type": "function",
        "z": "2c5c4f1d1a75144b",
        "name": "orientation",
        "func": "let queersearch = \"orientation\"; // aici pui header-ul pe care îl cauți\nlet raw = msg.payload;\nlet options = [];\n\nlet headers = raw[0]; // primul rând e header-ul\nlet colIndex = headers.indexOf(queersearch); // caută indexul coloanei dorite\n\nif (colIndex === -1) {\n    node.error(\"Coloana cu numele '\" + queersearch + \"' nu a fost găsită!\");\n    return null;\n}\n\nfor (let i = 1; i < raw.length; i++) { // începi de la 1 că 0 e header-ul\n    let val = raw[i][colIndex];\n    if (val) options.push(val);\n}\n\n\nmsg.payload = \"options\";\nmsg.options = options;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 540,
        "wires": [
            [
                "9f03526ae2731598"
            ]
        ]
    },
    {
        "id": "9f03526ae2731598",
        "type": "ui_dropdown",
        "z": "2c5c4f1d1a75144b",
        "name": "orientare",
        "label": "",
        "tooltip": "Fețele folosibile",
        "place": "Orientare acoperis",
        "group": "b2278266bff38fdf",
        "order": 15,
        "width": 3,
        "height": 1,
        "passthru": true,
        "multiple": true,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 720,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "9f9afd6ed86d1dc4",
        "type": "ui_text_input",
        "z": "2c5c4f1d1a75144b",
        "name": "Suprafata",
        "label": "Suprafata",
        "tooltip": "m²",
        "group": "b2278266bff38fdf",
        "order": 14,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 800,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "cdf4b31235126be2",
        "type": "ui_text",
        "z": "2c5c4f1d1a75144b",
        "group": "b2278266bff38fdf",
        "order": 16,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "Cât curent se consumă într-un an?",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 700,
        "y": 720,
        "wires": []
    },
    {
        "id": "0669aaef899f06bd",
        "type": "ui_text_input",
        "z": "2c5c4f1d1a75144b",
        "name": "kW estimat",
        "label": "kW",
        "tooltip": "– se citeste pe o factura de anul trecut in aceeasi perioada, ca sa prinda 12 luni consecutive iarna-vara",
        "group": "b2278266bff38fdf",
        "order": 17,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 970,
        "y": 720,
        "wires": [
            [
                "17c984f712e505f8"
            ]
        ]
    },
    {
        "id": "17c984f712e505f8",
        "type": "function",
        "z": "2c5c4f1d1a75144b",
        "name": "math power_req",
        "func": "let valoare = parseFloat(msg.payload);  // Preia valoarea de la kW estimat\n\nif (isNaN(valoare)) {\n \n    return null;\n}\n\nlet rezultat = valoare / 1200;\nrezultat = Math.round(rezultat * 10) / 10;  // rotunjire la o zecimală\n\nif (rezultat < 3) {\n    rezultat = 3;\n}\n\nmsg.payload = rezultat;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 760,
        "wires": [
            [
                "b064a974ec872863"
            ]
        ]
    },
    {
        "id": "b064a974ec872863",
        "type": "ui_text_input",
        "z": "2c5c4f1d1a75144b",
        "name": "power_req",
        "label": "",
        "tooltip": "",
        "group": "b2278266bff38fdf",
        "order": 21,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 870,
        "y": 760,
        "wires": [
            [
                "69e59b0de930e0cb"
            ]
        ]
    },
    {
        "id": "f07fa3a62c515a68",
        "type": "ui_text",
        "z": "2c5c4f1d1a75144b",
        "group": "b2278266bff38fdf",
        "order": 18,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "kW",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 1030,
        "y": 760,
        "wires": []
    },
    {
        "id": "63e51d4a8dab2440",
        "type": "ui_text",
        "z": "2c5c4f1d1a75144b",
        "group": "b2278266bff38fdf",
        "order": 20,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "Putere Invertor",
        "format": "{{msg.payload}}",
        "layout": "row-right",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 140,
        "y": 720,
        "wires": []
    },
    {
        "id": "69e59b0de930e0cb",
        "type": "function",
        "z": "2c5c4f1d1a75144b",
        "name": "math insularizare",
        "func": "let valoare = parseFloat(msg.payload);\nif (isNaN(valoare)) {\n    node.warn(\"Valoarea introdusă nu este un număr valid.\");\n    return null;\n}\n\nlet rezultat = valoare / 1;  // exemplu, îl lași cum vrei\n\nlet output = {\n    enabled: true    // toggle editabil\n};\n\nif (rezultat >= 26.9) {\n    output.payload = true;   // toggle ON\n    output.enabled = false;  // toggle blocat\n}\n\nreturn output;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 820,
        "wires": [
            [
                "907cfe11a5ced652"
            ]
        ]
    },
    {
        "id": "907cfe11a5ced652",
        "type": "ui_switch",
        "z": "2c5c4f1d1a75144b",
        "name": "",
        "label": "Insularizare",
        "tooltip": "",
        "group": "b2278266bff38fdf",
        "order": 23,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 870,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "40963290f5b271a4",
        "type": "ui_switch",
        "z": "2c5c4f1d1a75144b",
        "name": "",
        "label": "Solutie Back-UP?",
        "tooltip": "Posibilitate de a adaiga acumulatori",
        "group": "b2278266bff38fdf",
        "order": 25,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 630,
        "y": 880,
        "wires": [
            [
                "0f1a641ba3435011"
            ]
        ]
    },
    {
        "id": "0f1a641ba3435011",
        "type": "function",
        "z": "2c5c4f1d1a75144b",
        "name": "enable/disable",
        "func": "if (msg.payload === true) {\n    return { payload: \"\", enabled: true };\n} else {\n    return { payload: false, enabled: false };\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 840,
        "y": 880,
        "wires": [
            [
                "b0e3d56528f9606b",
                "d7b8e646a9d74e86"
            ]
        ]
    },
    {
        "id": "401c46f05138e11b",
        "type": "ui_text_input",
        "z": "2c5c4f1d1a75144b",
        "name": "backup power",
        "label": "Kw",
        "tooltip": "",
        "group": "b2278266bff38fdf",
        "order": 31,
        "width": 2,
        "height": 1,
        "passthru": true,
        "mode": "number",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 1060,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "c9dfb81496439194",
        "type": "ui_switch",
        "z": "2c5c4f1d1a75144b",
        "name": "",
        "label": "Esti Off-Grid?",
        "tooltip": "",
        "group": "b2278266bff38fdf",
        "order": 29,
        "width": 4,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 620,
        "y": 960,
        "wires": [
            [
                "bc27edb0bb6b506b"
            ]
        ]
    },
    {
        "id": "9b4e63a8afe11fab",
        "type": "ui_switch",
        "z": "2c5c4f1d1a75144b",
        "name": "phaze",
        "label": "Trifazat?",
        "tooltip": "",
        "group": "b2278266bff38fdf",
        "order": 33,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 610,
        "y": 1020,
        "wires": [
            [
                "d547ee3a229a8eef"
            ]
        ]
    },
    {
        "id": "f430e4a292625b6c",
        "type": "ui_text",
        "z": "2c5c4f1d1a75144b",
        "group": "b2278266bff38fdf",
        "order": 32,
        "width": 2,
        "height": 1,
        "name": "",
        "label": "Tip Bransament:",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 340,
        "y": 980,
        "wires": []
    },
    {
        "id": "19c28cda84bc718e",
        "type": "ui_switch",
        "z": "2c5c4f1d1a75144b",
        "name": "",
        "label": "Asincron?",
        "tooltip": "",
        "group": "b2278266bff38fdf",
        "order": 34,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1000,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "d547ee3a229a8eef",
        "type": "function",
        "z": "2c5c4f1d1a75144b",
        "name": "enable/disable",
        "func": "if (msg.payload === true) {\n    return { payload: \"\", enabled: true };\n} else {\n    return { payload: false, enabled: false };\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 1020,
        "wires": [
            [
                "19c28cda84bc718e"
            ]
        ]
    },
    {
        "id": "b0e3d56528f9606b",
        "type": "ui_switch",
        "z": "2c5c4f1d1a75144b",
        "name": "ups",
        "label": "Backup UPS?",
        "tooltip": "",
        "group": "b2278266bff38fdf",
        "order": 27,
        "width": 2,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1050,
        "y": 880,
        "wires": [
            [
                "f0964d1d8980209b"
            ]
        ]
    },
    {
        "id": "f0964d1d8980209b",
        "type": "function",
        "z": "2c5c4f1d1a75144b",
        "name": "enable/disable",
        "func": "if (msg.payload === true) {\n    return { payload: \"\", enabled: true };\n} else {\n    return { payload: false, enabled: false };\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 860,
        "y": 920,
        "wires": [
            [
                "401c46f05138e11b"
            ]
        ]
    },
    {
        "id": "e09091c06455925c",
        "type": "ui_text",
        "z": "2c5c4f1d1a75144b",
        "group": "b2278266bff38fdf",
        "order": 35,
        "width": 0,
        "height": 0,
        "name": "zona smart",
        "label": "Zona Smart",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 610,
        "y": 1100,
        "wires": []
    },
    {
        "id": "88ea80c2a17d8035",
        "type": "ui_switch",
        "z": "2c5c4f1d1a75144b",
        "name": "modulwifi",
        "label": "Modul Wi-Fi",
        "tooltip": "",
        "group": "b2278266bff38fdf",
        "order": 37,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 620,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "a434a722e378dfd0",
        "type": "ui_switch",
        "z": "2c5c4f1d1a75144b",
        "name": "modulgsm",
        "label": "Modul GSM",
        "tooltip": "",
        "group": "b2278266bff38fdf",
        "order": 38,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 630,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "b3c3385051fe9175",
        "type": "ui_switch",
        "z": "2c5c4f1d1a75144b",
        "name": "smartmeter",
        "label": "Modul SmartMeter",
        "tooltip": "",
        "group": "b2278266bff38fdf",
        "order": 42,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 830,
        "y": 1200,
        "wires": [
            []
        ]
    },
    {
        "id": "9f9314903d2643ae",
        "type": "ui_switch",
        "z": "2c5c4f1d1a75144b",
        "name": "smartguard",
        "label": "Modul SmartGuard",
        "tooltip": "",
        "group": "b2278266bff38fdf",
        "order": 41,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 810,
        "y": 1160,
        "wires": [
            [
                "a4eb1dd059afc221"
            ]
        ]
    },
    {
        "id": "a4eb1dd059afc221",
        "type": "function",
        "z": "2c5c4f1d1a75144b",
        "name": "enable/disable",
        "func": "if (msg.payload === true) {\n    return { payload: false, enabled: false };\n} else {\n    return { payload: false, enabled: true };\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1160,
        "wires": [
            [
                "b3c3385051fe9175"
            ]
        ]
    },
    {
        "id": "6d957bb014ca1fed",
        "type": "ui_text",
        "z": "2c5c4f1d1a75144b",
        "group": "b2278266bff38fdf",
        "order": 44,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "zona panouri",
        "format": "{{msg.payload}}",
        "layout": "row-center",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 630,
        "y": 1280,
        "wires": []
    },
    {
        "id": "32fb3288dd90bdad",
        "type": "ui_switch",
        "z": "2c5c4f1d1a75144b",
        "name": "optimizatori",
        "label": "Optimizatori",
        "tooltip": "",
        "group": "b2278266bff38fdf",
        "order": 46,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 550,
        "y": 1340,
        "wires": [
            [
                "b144635a77779732"
            ]
        ]
    },
    {
        "id": "ad9b9fbc2d5ce45f",
        "type": "ui_switch",
        "z": "2c5c4f1d1a75144b",
        "name": "incendiu",
        "label": "Protectie la incendiu",
        "tooltip": "",
        "group": "b2278266bff38fdf",
        "order": 47,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 940,
        "y": 1340,
        "wires": [
            []
        ]
    },
    {
        "id": "251d79088abf56ea",
        "type": "ui_switch",
        "z": "2c5c4f1d1a75144b",
        "name": "monitorizare",
        "label": "Monitorizare pe panouri",
        "tooltip": "",
        "group": "b2278266bff38fdf",
        "order": 51,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 570,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "c47793820f9ea8be",
        "type": "ui_switch",
        "z": "2c5c4f1d1a75144b",
        "name": "umbrire",
        "label": "Zona cu umbrire",
        "tooltip": "",
        "group": "b2278266bff38fdf",
        "order": 50,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 940,
        "y": 1380,
        "wires": [
            []
        ]
    },
    {
        "id": "b144635a77779732",
        "type": "function",
        "z": "2c5c4f1d1a75144b",
        "name": "enable/disable",
        "func": "if (msg.payload === true) {\n    return { payload: true, enabled: true };\n} else {\n    return { payload: \"\", enabled: true };\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 1360,
        "wires": [
            [
                "ad9b9fbc2d5ce45f",
                "251d79088abf56ea",
                "c47793820f9ea8be"
            ]
        ]
    },
    {
        "id": "d7b8e646a9d74e86",
        "type": "ui_switch",
        "z": "2c5c4f1d1a75144b",
        "name": "backup box",
        "label": "BackupBox?",
        "tooltip": "",
        "group": "b2278266bff38fdf",
        "order": 26,
        "width": 3,
        "height": 1,
        "passthru": true,
        "decouple": "false",
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "animate": false,
        "className": "",
        "x": 1110,
        "y": 840,
        "wires": [
            []
        ]
    },
    {
        "id": "bd9242c659a39aa9",
        "type": "GSheet",
        "z": "2c5c4f1d1a75144b",
        "creds": "be12146d67b1f521",
        "method": "get",
        "action": "",
        "sheet": "1OKABJQ4YEo-wAlbCFOVMOCktMDan0y4-_meYFEodKus",
        "cells": "invertor!A1:x9999",
        "flatten": false,
        "name": "invertor",
        "x": 520,
        "y": 660,
        "wires": [
            [
                "4a522330d2aa94c3"
            ]
        ]
    },
    {
        "id": "4a522330d2aa94c3",
        "type": "function",
        "z": "2c5c4f1d1a75144b",
        "name": "invertor",
        "func": "let queersearch = \"brand\"; // aici pui header-ul pe care îl cauți\nlet raw = msg.payload;\nlet options = [];\n\nlet headers = raw[0]; // primul rând e header-ul\nlet colIndex = headers.indexOf(queersearch); // caută indexul coloanei dorite\n\nif (colIndex === -1) {\n    node.error(\"Coloana cu numele '\" + queersearch + \"' nu a fost găsită!\");\n    return null;\n}\n\nfor (let i = 1; i < raw.length; i++) { // începi de la 1 că 0 e header-ul\n    let val = raw[i][colIndex];\n    if (val) options.push(val);\n}\n\n// Păstrează doar valorile unice\noptions = [...new Set(options)];\n\nmsg.payload = \"options\";\nmsg.options = options;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 660,
        "wires": [
            [
                "8e949247847fb91e"
            ]
        ]
    },
    {
        "id": "8e949247847fb91e",
        "type": "ui_dropdown",
        "z": "2c5c4f1d1a75144b",
        "name": "invertor",
        "label": "",
        "tooltip": "",
        "place": "Invertor Favorit",
        "group": "b2278266bff38fdf",
        "order": 19,
        "width": 4,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 900,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "bc27edb0bb6b506b",
        "type": "function",
        "z": "2c5c4f1d1a75144b",
        "name": "enable/disable",
        "func": "if (msg.payload === true) {\n    return { payload: true, enabled: false };\n} else {\n    return { payload: \"\", enabled: true };\n}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 820,
        "y": 960,
        "wires": [
            [
                "40963290f5b271a4",
                "b0e3d56528f9606b",
                "401c46f05138e11b"
            ]
        ]
    },
    {
        "id": "3f90ac0253997c9c",
        "type": "comment",
        "z": "4a7c072e91de67b7",
        "name": "maps api key",
        "info": "AIzaSyCzmjjCikZtAtbO99wLmZM0oR9wclN23nA",
        "x": 410,
        "y": 180,
        "wires": []
    },
    {
        "id": "6b3d09d3b51b047d",
        "type": "inject",
        "z": "4a7c072e91de67b7",
        "name": "Set API Key",
        "props": [
            {
                "p": "apiKey",
                "v": "AIzaSyCzmjjCikZtAtbO99wLmZM0oR9wclN23nA",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "x": 140,
        "y": 240,
        "wires": [
            [
                "3d0d80732542c352"
            ]
        ]
    },
    {
        "id": "3d0d80732542c352",
        "type": "function",
        "z": "4a7c072e91de67b7",
        "name": "save API key",
        "func": "let apiKey = \"AIzaSyCzmjjCikZtAtbO99wLmZM0oR9wclN23nA\";\nflow.set(\"apiKey\", apiKey);\nreturn null;\n",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "let apiKey = \"AIzaSyCzmjjCikZtAtbO99wLmZM0oR9wclN23nA\";\nflow.set(\"apiKey\", apiKey);\nreturn null;\n",
        "finalize": "",
        "libs": [],
        "x": 350,
        "y": 240,
        "wires": []
    },
    {
        "id": "e9164d5fadc9ec93",
        "type": "function",
        "z": "4a7c072e91de67b7",
        "name": "Verifică input",
        "func": "let input = msg.payload.trim();\nmsg.apiKey = flow.get(\"apiKey\");\n\nif (input.match(/^-?\\d+\\.\\d+,-?\\d+\\.\\d+$/)) {\n    // Coordonate directe\n    msg.coords = input;\n    return [msg, null];\n} else {\n    msg.adresa = input;\n    return [null, msg];\n}",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 300,
        "wires": [
            [
                "eb8d097f3f90e611"
            ],
            [
                "0d74d39be189bfa3"
            ]
        ]
    },
    {
        "id": "eb8d097f3f90e611",
        "type": "function",
        "z": "4a7c072e91de67b7",
        "name": "Generează link cu coordonate",
        "func": "let apiKey = flow.get(\"apiKey\");\nlet zoomLevel = 21;\n\nmsg.payload = `https://www.google.com/maps/embed/v1/view?key=${apiKey}&center=${msg.coords}&zoom=${zoomLevel}&maptype=satellite`;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 260,
        "wires": [
            [
                "743c12c4ac145268"
            ]
        ]
    },
    {
        "id": "0d74d39be189bfa3",
        "type": "http request",
        "z": "4a7c072e91de67b7",
        "name": "Geocoding",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://maps.googleapis.com/maps/api/geocode/json?address={{adresa}}&key={{apiKey}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 550,
        "y": 320,
        "wires": [
            [
                "9a4787d2298c9db9"
            ]
        ]
    },
    {
        "id": "9a4787d2298c9db9",
        "type": "function",
        "z": "4a7c072e91de67b7",
        "name": "Extrage coordonate",
        "func": "if (msg.payload.status !== \"OK\" || !msg.payload.results.length) {\n    node.warn(\"Nu s-au gasit coordonate\");\n    return null;\n}\nlet loc = msg.payload.results[0].geometry.location;\nlet coords = `${loc.lat},${loc.lng}`;\n\nlet apiKey = flow.get(\"apiKey\");\nlet zoomLevel = 21;\n\nflow.set(\"lastCoords\", coords);\n\n\nmsg.payload = `https://www.google.com/maps/embed/v1/view?key=${apiKey}&center=${coords}&zoom=${zoomLevel}&maptype=satellite`;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 380,
        "wires": [
            [
                "743c12c4ac145268"
            ]
        ]
    },
    {
        "id": "6f64fbf86847670c",
        "type": "ui_text_input",
        "z": "4a7c072e91de67b7",
        "name": "Locatie",
        "label": "Introduceți adresa sau coordonatele",
        "tooltip": "Ex: Strada Zorilor 11, Galați SAU 45.43081,28.03974",
        "group": "6014a4247775ebe7",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "className": "",
        "topicType": "str",
        "x": 140,
        "y": 300,
        "wires": [
            [
                "e9164d5fadc9ec93"
            ]
        ]
    },
    {
        "id": "743c12c4ac145268",
        "type": "ui_template",
        "z": "4a7c072e91de67b7",
        "group": "6014a4247775ebe7",
        "name": "iframe maps",
        "order": 2,
        "width": 0,
        "height": 0,
        "format": "<iframe id=\"harta\" width=\"100%\" height=\"800px\" frameborder=\"0\" style=\"border:0\" allowfullscreen></iframe>\n\n<script>\n(function(scope) {\n    scope.$watch('msg.payload', function(url) {\n        if (url && url.startsWith(\"http\")) {\n            document.getElementById(\"harta\").src = url;\n        }\n    });\n})(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 1090,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "snap_button",
        "type": "ui_button",
        "z": "4a7c072e91de67b7",
        "name": "SNAP!",
        "group": "6014a4247775ebe7",
        "order": 5,
        "width": 4,
        "height": 1,
        "passthru": false,
        "label": "SNAP!",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 270,
        "y": 540,
        "wires": [
            [
                "gen_static_url"
            ]
        ]
    },
    {
        "id": "gen_static_url",
        "type": "function",
        "z": "4a7c072e91de67b7",
        "name": "Generează URL Static Maps",
        "func": "let apiKey = flow.get(\"apiKey\");\nlet coords;\nlet zoom = 20;\n\nif (msg.payload === \"clear\") {\n    coords = \"79.60966386362945,23.845398389625164\";\n} else {\n    coords = flow.get(\"lastCoords\");\n}\n\nif (!coords) {\n    msg.payload = \"\";\n    return msg;\n}\n\nmsg.payload = `https://maps.googleapis.com/maps/api/staticmap?center=${coords}&zoom=${zoom}&size=400x800&maptype=satellite&key=${apiKey}`;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 540,
        "wires": [
            [
                "static_image_display"
            ]
        ]
    },
    {
        "id": "static_image_display",
        "type": "ui_template",
        "z": "4a7c072e91de67b7",
        "group": "6014a4247775ebe7",
        "name": "Poză Static Maps",
        "order": 7,
        "width": 0,
        "height": 0,
        "format": "\n<div style=\"position: relative; width: 100%; height: 800px;\">\n    <img id=\"staticmap\" src=\"\" style=\"width: 100%; height: 800px;\"/>\n    <div style=\"position: absolute; top: 5px; left: 5px; background: rgba(255,255,255,0.7); padding: 5px; font-size: 12px;\">\n        N ↑<br>S ↓<br>E →<br>V ←\n    </div>\n</div>\n\n<script>\n(function(scope) {\n    scope.$watch('msg.payload', function(url) {\n        if (url && url.startsWith(\"http\")) {\n            document.getElementById(\"staticmap\").src = url;\n        }\n    });\n})(scope);\n</script>\n",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 730,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "fa261c6f512c560f",
        "type": "ui_button",
        "z": "4a7c072e91de67b7",
        "name": "clear",
        "group": "6014a4247775ebe7",
        "order": 4,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "clear",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "clear",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 270,
        "y": 500,
        "wires": [
            [
                "gen_static_url"
            ]
        ]
    },
    {
        "id": "b2016eb4178cdd1b",
        "type": "function",
        "z": "4a7c072e91de67b7",
        "name": "apikeysaver",
        "func": "let apikey = \"AIzaSyCzmjjCikZtAtbO99wLmZM0oR9wclN23nA\";\nflow.set(\"apiKey\", apikey);\nreturn null;",
        "outputs": 0,
        "timeout": "",
        "noerr": 0,
        "initialize": "let apikey = \"AIzaSyCzmjjCikZtAtbO99wLmZM0oR9wclN23nA\";\nflow.set(\"apiKey\", apikey);\nreturn null;",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 660,
        "wires": []
    },
    {
        "id": "93712ed85aed0f1e",
        "type": "ui_text_input",
        "z": "4a7c072e91de67b7",
        "name": "cauta",
        "label": "Caută adresa sau coordonatele",
        "tooltip": "Ex: Strada Zorilor 11, Galați SAU 45.43081,28.03974",
        "group": "db1d4c6fa091cab3",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "",
        "sendOnBlur": true,
        "x": 190,
        "y": 760,
        "wires": [
            [
                "290c3ba2770295e1"
            ]
        ]
    },
    {
        "id": "5e24cd60f8faf8b6",
        "type": "function",
        "z": "4a7c072e91de67b7",
        "name": "coord_to_address",
        "func": "let coords = msg.payload.trim();\nlet apiKey = flow.get(\"apiKey\");\nmsg.url = `https://maps.googleapis.com/maps/api/geocode/json?latlng=${coords}&key=${apiKey}`;\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 650,
        "y": 880,
        "wires": [
            [
                "7290d3cfda079ccf"
            ]
        ]
    },
    {
        "id": "7290d3cfda079ccf",
        "type": "http request",
        "z": "4a7c072e91de67b7",
        "name": "back to address",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "x": 900,
        "y": 880,
        "wires": [
            [
                "1b8eb5003df6d403"
            ]
        ]
    },
    {
        "id": "1b8eb5003df6d403",
        "type": "function",
        "z": "4a7c072e91de67b7",
        "name": "interpreter",
        "func": "if (msg.payload.status !== \"OK\" || !msg.payload.results.length) {\n    return null;\n}\nlet adresa = msg.payload.results[0].formatted_address;\nmsg.payload = adresa;\nreturn msg;",
        "outputs": 1,
        "x": 830,
        "y": 760,
        "wires": [
            [
                "93712ed85aed0f1e"
            ]
        ]
    },
    {
        "id": "b2f593f11044dbc9",
        "type": "ui_text",
        "z": "4a7c072e91de67b7",
        "group": "db1d4c6fa091cab3",
        "order": 7,
        "width": 4,
        "height": 1,
        "name": "",
        "label": "coordonate",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 410,
        "y": 1060,
        "wires": []
    },
    {
        "id": "fc13c98f456dbb75",
        "type": "ui_text",
        "z": "4a7c072e91de67b7",
        "group": "db1d4c6fa091cab3",
        "order": 2,
        "width": 5,
        "height": 1,
        "name": "",
        "label": "Aseaza punctul pe acoperisul in cauza",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 410,
        "y": 840,
        "wires": []
    },
    {
        "id": "add2f2052b9f8897",
        "type": "ui_template",
        "z": "4a7c072e91de67b7",
        "group": "db1d4c6fa091cab3",
        "name": "Harta Google Maps",
        "order": 4,
        "width": 6,
        "height": 11,
        "format": "<div id=\"map\" style=\"width:600px;height:800px;\"></div>\n<script>\n(function(scope) {\n    let map;\n    let marker;\n\n    scope.$watch('msg.apiKey', function(apiKey) {\n        if (apiKey && !document.getElementById('googlemapsapi')) {\n            var script = document.createElement('script');\n            script.id = 'googlemapsapi';\n            script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}`;\n            document.head.appendChild(script);\n        }\n    });\n\n    function initMap(lat, lng) {\n        const coords = { lat: lat, lng: lng };\n        map = new google.maps.Map(document.getElementById('map'), {\n            center: coords,\n            zoom: 20,\n            mapTypeId: 'satellite',\n            scaleControl: true\n        });\n        map.setTilt(0);\n        marker = new google.maps.Marker({\n            position: coords,\n            map: map,\n            draggable: true\n        });\n        marker.addListener('dragend', function(event) {\n            const newPos = event.latLng;\n            scope.send({ payload: `${newPos.lat()},${newPos.lng()}` });\n        });\n    }\n\n    scope.$watch('msg.payload', function(payload) {\n        if (payload && payload.coords) {\n            const parts = payload.coords.split(',');\n            const lat = parseFloat(parts[0]);\n            const lng = parseFloat(parts[1]);\n\n            if (!map) {\n                initMap(lat, lng);\n            } else {\n                map.setCenter({ lat: lat, lng: lng });\n                marker.setPosition({ lat: lat, lng: lng });\n            }\n        }\n    });\n})(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 410,
        "y": 920,
        "wires": [
            [
                "5e24cd60f8faf8b6",
                "b2f593f11044dbc9",
                "863b913352558678"
            ]
        ]
    },
    {
        "id": "322f53ca19f7cc18",
        "type": "function",
        "z": "4a7c072e91de67b7",
        "name": "extract_coords",
        "func": "if (msg.payload.status !== \"OK\" || !msg.payload.results.length) {\n    node.warn(\"Nu s-au gasit coordonate\");\n    return null;\n}\nlet loc = msg.payload.results[0].geometry.location;\nlet coords = `${loc.lat},${loc.lng}`;\nmsg.payload = { coords: coords };\nmsg.apiKey = flow.get(\"apiKey\");\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 180,
        "y": 1000,
        "wires": [
            [
                "add2f2052b9f8897"
            ]
        ]
    },
    {
        "id": "69d26f39f1b6bda1",
        "type": "http request",
        "z": "4a7c072e91de67b7",
        "name": "geocode_request",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 150,
        "y": 940,
        "wires": [
            [
                "322f53ca19f7cc18"
            ]
        ]
    },
    {
        "id": "290c3ba2770295e1",
        "type": "function",
        "z": "4a7c072e91de67b7",
        "name": "map_logic",
        "func": "let input = msg.payload.trim();\nlet apiKey = flow.get(\"apiKey\");\nmsg.apiKey = apiKey;\n\nif (input.match(/^-?\\d+\\.\\d+,-?\\d+\\.\\d+$/)) {\n    msg.payload = { coords: input };\n    return [msg, null];\n} else {\n    msg.payload = { address: input };\n    msg.url = `https://maps.googleapis.com/maps/api/geocode/json?address=${encodeURIComponent(input)}&key=${apiKey}`;\n    return [null, msg];\n}",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 130,
        "y": 880,
        "wires": [
            [
                "add2f2052b9f8897"
            ],
            [
                "69d26f39f1b6bda1"
            ]
        ]
    },
    {
        "id": "863b913352558678",
        "type": "function",
        "z": "4a7c072e91de67b7",
        "name": "gen_static_url",
        "func": "let coords = msg.payload.coords || msg.payload.trim();\nlet apiKey = flow.get('apiKey');\nlet zoom = 20;\n\nmsg.payload = `https://maps.googleapis.com/maps/api/staticmap?center=${coords}&zoom=${zoom}&size=400x800&maptype=satellite&key=${apiKey}`;\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 580,
        "y": 1000,
        "wires": [
            [
                "149ff997de889bdd"
            ]
        ]
    },
    {
        "id": "149ff997de889bdd",
        "type": "ui_template",
        "z": "4a7c072e91de67b7",
        "group": "db1d4c6fa091cab3",
        "name": "Static Map Rotibil",
        "order": 5,
        "width": 6,
        "height": 14,
        "format": "<div id=\"frame\" style=\"position: relative; width: 450px; height: 600px; border: 2px solid #000; overflow: hidden;\">\n    <img id=\"staticmap\" src=\"\"\n         style=\"position: absolute;\n                top: 50%;\n                left: 50%;\n                width: 402px;\n                height: 536px;\n                transform: translate(-50%, -50%) rotate(0deg);\n                transition: transform 0.3s;\" />\n\n    <div id=\"horizontal-line\"\n        style=\"position: absolute; top: 50%; left: 0; width: 100%; height: 1px; background: rgba(255,0,0,0.5); pointer-events: none;\">\n    </div>\n    <div id=\"vertical-line\"\n        style=\"position: absolute; left: 50%; top: 0; width: 1px; height: 100%; background: rgba(0,0,255,0.5); pointer-events: none;\">\n    </div>\n    <div id=\"north-indicator\"\n    style=\"position: absolute;\n           top: 10px;\n           left: 10px;\n           background: rgba(255, 255, 255, 0.7);\n           color: black;\n           font-weight: bold;\n           padding: 4px 8px;\n           border-radius: 4px;\n           font-size: 14px;\n           z-index: 10;\n           pointer-events: none;\">\n    N\n</div>\n\n</div>\n\n<div style=\"margin-top: 10px;\">\n    <b>Control Rapid:</b><br>\n    <button onclick=\"moveImage(-10, 0)\">⬅️</button>\n    <button onclick=\"moveImage(10, 0)\">➡️</button>\n    <button onclick=\"moveImage(0, -10)\">⬆️</button>\n    <button onclick=\"moveImage(0, 10)\">⬇️</button>\n    <button onclick=\"rotateImage(-5)\">⟲</button>\n    <button onclick=\"rotateImage(5)\">⟳</button>\n</div>\n\n<div style=\"margin-top: 10px;\">\n    <b>Control Fin:</b><br>\n    <button onclick=\"moveImage(-1, 0)\">⬅️</button>\n    <button onclick=\"moveImage(1, 0)\">➡️</button>\n    <button onclick=\"moveImage(0, -1)\">⬆️</button>\n    <button onclick=\"moveImage(0, 1)\">⬇️</button>\n    <button onclick=\"rotateImage(-0.5)\">⟲</button>\n    <button onclick=\"rotateImage(0.5)\">⟳</button>\n</div>\n\n<div style=\"margin-top: 10px;\">\n    <b>Crosshair:</b>\n    <button onclick=\"toggleCrosshair()\">ON/OFF</button>\n</div>\n\n<script>\n    (function(scope) {\n    let posX = 0;\n    let posY = 0;\n    let rotation = 0;\n    let crosshairVisible = true;\n\n    const img = document.getElementById(\"staticmap\");\n    const horizontal = document.getElementById(\"horizontal-line\");\n    const vertical = document.getElementById(\"vertical-line\");\n\n    function updateTransform() {\n        img.style.transform = `translate(calc(-50% + ${posX}px), calc(-50% + ${posY}px)) rotate(${rotation}deg)`;\n    }\n\n    window.moveImage = function(dx, dy) {\n        posX += dx;\n        posY += dy;\n        updateTransform();\n    };\n\n    window.rotateImage = function(angle) {\n        rotation += angle;\n        updateTransform();\n    };\n\n    window.toggleCrosshair = function() {\n        crosshairVisible = !crosshairVisible;\n        horizontal.style.display = crosshairVisible ? 'block' : 'none';\n        vertical.style.display = crosshairVisible ? 'block' : 'none';\n    };\n\n    scope.$watch('msg.payload', function(data) {\n        if (typeof data === 'string' && data.startsWith(\"http\")) {\n            img.src = data;\n        }\n    });\n})(scope);\n</script>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 890,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "2bf92e41b3053a00",
        "type": "GSheet",
        "z": "3ddc41d7728b4948",
        "creds": "be12146d67b1f521",
        "method": "get",
        "action": "",
        "sheet": "17oi3Jrnrd_K0y4p8-Sr6G14zEb2RDWmlhMci24xCgqU",
        "cells": "w!A1:x999",
        "flatten": false,
        "name": "Commands",
        "x": 510,
        "y": 100,
        "wires": [
            [
                "ae592902f0c27534",
                "91b243fbddfc2369"
            ]
        ]
    },
    {
        "id": "91b243fbddfc2369",
        "type": "function",
        "z": "3ddc41d7728b4948",
        "name": "searcher",
        "func": "let qsp = \"location\"; // aici pui header-ul pe care îl cauți\nlet raw = msg.payload || [];\nlet options = [];\n\nif (!Array.isArray(raw) || raw.length === 0) {\n    node.warn(\"Payload gol sau invalid\");\n    return null;\n}\n\nlet headers = raw[0];\nlet colIndex = headers.indexOf(qsp);\n\nif (colIndex === -1) {\n    node.warn(\"Coloana '\" + qsp + \"' nu a fost găsită!\");\n    return null;\n}\n\nfor (let i = 1; i < raw.length; i++) {\n    let val = raw[i][colIndex];\n    if (val) options.push(val);\n}\n\nmsg.payload = \"options\";\nmsg.options = options;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 740,
        "y": 140,
        "wires": [
            [
                "75bf6f40503e3ba1"
            ]
        ]
    },
    {
        "id": "75bf6f40503e3ba1",
        "type": "ui_dropdown",
        "z": "3ddc41d7728b4948",
        "name": "locatie",
        "label": "",
        "tooltip": "",
        "place": "locatie",
        "group": "401690cd3bbc7586",
        "order": 9,
        "width": 3,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 610,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "65285f06221e75e2",
        "type": "ui_dropdown",
        "z": "3ddc41d7728b4948",
        "name": "action",
        "label": "",
        "tooltip": "",
        "place": "action",
        "group": "401690cd3bbc7586",
        "order": 8,
        "width": 4,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 450,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "ae592902f0c27534",
        "type": "function",
        "z": "3ddc41d7728b4948",
        "name": "searcher",
        "func": "let qsp = \"action\"; // aici pui header-ul pe care îl cauți\nlet raw = msg.payload || [];\nlet options = [];\n\nif (!Array.isArray(raw) || raw.length === 0) {\n    node.warn(\"Payload gol sau invalid\");\n    return null;\n}\n\nlet headers = raw[0];\nlet colIndex = headers.indexOf(qsp);\n\nif (colIndex === -1) {\n    node.warn(\"Coloana '\" + qsp + \"' nu a fost găsită!\");\n    return null;\n}\n\nfor (let i = 1; i < raw.length; i++) {\n    let val = raw[i][colIndex];\n    if (val) options.push(val);\n}\n\nmsg.payload = \"options\";\nmsg.options = options;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 560,
        "y": 140,
        "wires": [
            [
                "65285f06221e75e2"
            ]
        ]
    },
    {
        "id": "6477a9d74418db29",
        "type": "GSheet",
        "z": "3ddc41d7728b4948",
        "creds": "be12146d67b1f521",
        "method": "get",
        "action": "",
        "sheet": "17oi3Jrnrd_K0y4p8-Sr6G14zEb2RDWmlhMci24xCgqU",
        "cells": "DATABASE!A1:h999",
        "flatten": false,
        "name": "Products",
        "x": 140,
        "y": 100,
        "wires": [
            [
                "c70c827829e93093"
            ]
        ]
    },
    {
        "id": "bce863539c3090a7",
        "type": "ui_dropdown",
        "z": "3ddc41d7728b4948",
        "name": "produs",
        "label": "",
        "tooltip": "",
        "place": "produs",
        "group": "401690cd3bbc7586",
        "order": 3,
        "width": 7,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 290,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "c70c827829e93093",
        "type": "function",
        "z": "3ddc41d7728b4948",
        "name": "searcher",
        "func": "let qsp = \"PRODUS\"; // sau orice altă coloană\nlet raw = msg.payload || [];\nlet options = [];\n\nif (!Array.isArray(raw) || raw.length === 0) {\n    node.warn(\"Payload gol sau invalid\");\n    return null;\n}\n\nlet headers = raw[0];\nlet colIndex = headers.indexOf(qsp);\n\nif (colIndex === -1) {\n    node.warn(\"Coloana '\" + qsp + \"' nu a fost găsită!\");\n    return null;\n}\n\nfor (let i = 1; i < raw.length; i++) {\n    let val = raw[i][colIndex];\n    if (val) options.push(val);\n}\n\nmsg.payload = \"options\";\nmsg.options = options;\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 140,
        "wires": [
            [
                "bce863539c3090a7"
            ]
        ]
    },
    {
        "id": "8d0d5bc1e297c01b",
        "type": "inject",
        "z": "3ddc41d7728b4948",
        "name": "Startup",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 500,
        "y": 20,
        "wires": [
            [
                "2bf92e41b3053a00",
                "6477a9d74418db29"
            ]
        ]
    },
    {
        "id": "c2d8a835468229bc",
        "type": "ui_text_input",
        "z": "3ddc41d7728b4948",
        "name": "Code Input",
        "label": "Scan",
        "tooltip": "",
        "group": "401690cd3bbc7586",
        "order": 2,
        "width": 3,
        "height": 2,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 130,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "13ad4d735139f678",
        "type": "ui_text_input",
        "z": "3ddc41d7728b4948",
        "name": "comments",
        "label": "comments",
        "tooltip": "",
        "group": "401690cd3bbc7586",
        "order": 5,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 1030,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "626378bd12db9c5e",
        "type": "ui_text_input",
        "z": "3ddc41d7728b4948",
        "name": "order no",
        "label": "order no",
        "tooltip": "",
        "group": "401690cd3bbc7586",
        "order": 11,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 1200,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "596a15a0ab29a774",
        "type": "ui_text",
        "z": "3ddc41d7728b4948",
        "group": "401690cd3bbc7586",
        "order": 4,
        "width": 1,
        "height": 1,
        "name": "data",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 750,
        "y": 260,
        "wires": []
    },
    {
        "id": "4ef7ca7848604647",
        "type": "ui_text",
        "z": "3ddc41d7728b4948",
        "group": "401690cd3bbc7586",
        "order": 10,
        "width": 1,
        "height": 1,
        "name": "ora",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "className": "",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#000000",
        "x": 870,
        "y": 260,
        "wires": []
    },
    {
        "id": "fc9f7b0dd7cc1c2c",
        "type": "ui_dropdown",
        "z": "b1c56fddda3ae2eb",
        "name": "action",
        "label": "Action",
        "tooltip": "",
        "place": "Selectează action",
        "group": "f872f36e4f84edb3",
        "order": 3,
        "width": 2,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 870,
        "y": 340,
        "wires": [
            [
                "5f55785332b0cc3f"
            ]
        ]
    },
    {
        "id": "361260107ed6db4a",
        "type": "ui_dropdown",
        "z": "b1c56fddda3ae2eb",
        "name": "location",
        "label": "Locatie",
        "tooltip": "",
        "place": "Selectează locație",
        "group": "f872f36e4f84edb3",
        "order": 7,
        "width": 3,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 860,
        "y": 380,
        "wires": [
            [
                "990aeb86c8056b48"
            ]
        ]
    },
    {
        "id": "10c093d3d29c30ed",
        "type": "ui_text_input",
        "z": "b1c56fddda3ae2eb",
        "name": "comments",
        "label": "Comments",
        "tooltip": "",
        "group": "f872f36e4f84edb3",
        "order": 4,
        "width": 5,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "comments",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 880,
        "y": 420,
        "wires": [
            [
                "b44e4ec6cadb697e"
            ]
        ]
    },
    {
        "id": "7334968613452ba0",
        "type": "ui_text_input",
        "z": "b1c56fddda3ae2eb",
        "name": "order",
        "label": "Order No",
        "tooltip": "",
        "group": "f872f36e4f84edb3",
        "order": 8,
        "width": 6,
        "height": 1,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "order",
        "sendOnBlur": true,
        "className": "",
        "topicType": "msg",
        "x": 880,
        "y": 460,
        "wires": [
            [
                "2babb2ed19e47cdd"
            ]
        ]
    },
    {
        "id": "32fe2e1eee500492",
        "type": "GSheet",
        "z": "b1c56fddda3ae2eb",
        "creds": "be12146d67b1f521",
        "method": "get",
        "action": "",
        "sheet": "17oi3Jrnrd_K0y4p8-Sr6G14zEb2RDWmlhMci24xCgqU",
        "cells": "w!A1:x999",
        "flatten": false,
        "name": "Commands",
        "x": 350,
        "y": 360,
        "wires": [
            [
                "54cca0ec953dd99f",
                "b487613f9ba76ba3",
                "verifica_incarcare"
            ]
        ]
    },
    {
        "id": "54cca0ec953dd99f",
        "type": "function",
        "z": "b1c56fddda3ae2eb",
        "name": "searcher",
        "func": "let qsp = \"action\"; // sau orice altă coloană\nlet raw = msg.payload || [];\nlet options = [];\n\nif (!Array.isArray(raw) || raw.length === 0) {\n    node.warn(\"Payload gol sau invalid\");\n    return null;\n}\n\nlet headers = raw[0];\nlet colIndex = headers.indexOf(qsp);\n\nif (colIndex === -1) {\n    node.warn(\"Coloana '\" + qsp + \"' nu a fost găsită!\");\n    return null;\n}\n\nfor (let i = 1; i < raw.length; i++) {\n    let val = raw[i][colIndex];\n    if (val && !options.includes(val)) options.push(val); // eliminăm duplicate\n}\n\nmsg.options = options;\nmsg.payload = options[0] || \"\";  // 🟢 selectează implicit prima opțiune\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 340,
        "wires": [
            [
                "fc9f7b0dd7cc1c2c"
            ]
        ]
    },
    {
        "id": "b487613f9ba76ba3",
        "type": "function",
        "z": "b1c56fddda3ae2eb",
        "name": "searcher",
        "func": "let qsp = \"location\"; // sau orice altă coloană\nlet raw = msg.payload || [];\nlet options = [];\n\nif (!Array.isArray(raw) || raw.length === 0) {\n    node.warn(\"Payload gol sau invalid\");\n    return null;\n}\n\nlet headers = raw[0];\nlet colIndex = headers.indexOf(qsp);\n\nif (colIndex === -1) {\n    node.warn(\"Coloana '\" + qsp + \"' nu a fost găsită!\");\n    return null;\n}\n\nfor (let i = 1; i < raw.length; i++) {\n    let val = raw[i][colIndex];\n    if (val && !options.includes(val)) options.push(val); // elimină duplicate\n}\n\nmsg.options = options;\nmsg.payload = options[0] || \"\";  // 🟢 selectează implicit prima opțiune\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 500,
        "y": 380,
        "wires": [
            [
                "361260107ed6db4a"
            ]
        ]
    },
    {
        "id": "e23602bb8ba499f7",
        "type": "GSheet",
        "z": "b1c56fddda3ae2eb",
        "creds": "be12146d67b1f521",
        "method": "get",
        "action": "",
        "sheet": "17oi3Jrnrd_K0y4p8-Sr6G14zEb2RDWmlhMci24xCgqU",
        "cells": "DATABASE!A1:h999",
        "flatten": false,
        "name": "Products",
        "x": 360,
        "y": 300,
        "wires": [
            [
                "02eee13be292a4db",
                "verifica_incarcare"
            ]
        ]
    },
    {
        "id": "02eee13be292a4db",
        "type": "function",
        "z": "b1c56fddda3ae2eb",
        "name": "searcher",
        "func": "let qsp = \"PRODUS\"; // sau orice altă coloană\nlet raw = msg.payload || [];\nlet options = [];\n\nif (!Array.isArray(raw) || raw.length === 0) {\n    node.warn(\"Payload gol sau invalid\");\n    return null;\n}\n\nlet headers = raw[0];\nlet colIndex = headers.indexOf(qsp);\n\nif (colIndex === -1) {\n    node.warn(\"Coloana '\" + qsp + \"' nu a fost găsită!\");\n    return null;\n}\n\nfor (let i = 1; i < raw.length; i++) {\n    let val = raw[i][colIndex];\n    if (val) options.push(val);\n}\n\nmsg.payload = \"options\";\nmsg.options = options;\n// la finalul funcției care populează produsul:\nflow.set(\"produs\", options[0] || \"\");\n\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 540,
        "y": 300,
        "wires": [
            [
                "9945235f18a760e3"
            ]
        ]
    },
    {
        "id": "9945235f18a760e3",
        "type": "ui_dropdown",
        "z": "b1c56fddda3ae2eb",
        "name": "produs",
        "label": "",
        "tooltip": "",
        "place": "produs",
        "group": "f872f36e4f84edb3",
        "order": 2,
        "width": 5,
        "height": 1,
        "passthru": true,
        "multiple": false,
        "options": [],
        "payload": "",
        "topic": "topic",
        "topicType": "msg",
        "className": "",
        "x": 870,
        "y": 300,
        "wires": [
            [
                "5db3dd4ed3c5ab82"
            ]
        ]
    },
    {
        "id": "91f3544e33661b27",
        "type": "inject",
        "z": "b1c56fddda3ae2eb",
        "name": "Startup",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 120,
        "y": 320,
        "wires": [
            [
                "e23602bb8ba499f7",
                "32fe2e1eee500492"
            ]
        ]
    },
    {
        "id": "b531bb4afb9e29f6",
        "type": "inject",
        "z": "b1c56fddda3ae2eb",
        "name": "Startup",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "x": 120,
        "y": 500,
        "wires": [
            [
                "34157cfe2209fbbd",
                "2248096d2dee7afa"
            ]
        ]
    },
    {
        "id": "34157cfe2209fbbd",
        "type": "function",
        "z": "b1c56fddda3ae2eb",
        "name": "clean",
        "func": "\nmsg.payload = \"\";\nreturn msg;\n",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 460,
        "wires": [
            [
                "9945235f18a760e3",
                "fc9f7b0dd7cc1c2c",
                "361260107ed6db4a",
                "10c093d3d29c30ed",
                "7334968613452ba0",
                "fa7f53b9aa29885b"
            ]
        ]
    },
    {
        "id": "ec036cb691d076f9",
        "type": "function",
        "z": "b1c56fddda3ae2eb",
        "name": "function 6",
        "func": "let raw = msg.payload?.trim?.() || \"\";\nlet triggerRefresh = msg.topic === \"initTable\";\n\nlet entries = flow.get(\"entries\") || [];\n\nif (!raw && !triggerRefresh) return null;\n\n\n// 🔹 Sparge fiecare cod de pe linie separată\nlet codes = raw.split(/\\r?\\n/).map(c => c.trim()).filter(c => c);\n\n\n\nlet produs = flow.get(\"produs\") || \"\";\nlet actiune = flow.get(\"actiune\") || \"\";\nlet locatie = flow.get(\"locatie\") || \"\";\nlet comentarii = flow.get(\"comentarii\") || \"\";\nlet comanda = flow.get(\"comanda\") || \"\";\n\nlet now = new Date();\nlet data = now.toLocaleDateString(\"ro-RO\");\nlet ora = now.toLocaleTimeString(\"ro-RO\");\n\nfor (let code of codes) {\n    let uid = code + \"_\" + data + \"_\" + ora;\n\n    let nouaIntrare = {\n        id: uid,\n        \"Code\": code,\n        \"Produs\": produs,\n        \"In/out\": actiune,\n        \"Locatie\": locatie,\n        \"Data\": data,\n        \"Ora\": ora,\n        \"Comentarii\": comentarii,\n        \"Nr Comanda\": comanda\n    };\n\n    entries.push(nouaIntrare);\n}\n\nflow.set(\"entries\", entries);  // salvăm în flow pentru acces global\n\nlet tableData = entries;\n\n// ▶️ Tabela principală cu coloanele tale\nlet tabelaPrincipala = {\n    payload: tableData,\n    ui_control: {\n        tabulator: {\n            layout: \"fitColumns\",\n            rowFormatter: \"function(row){ const d=row.getData(); const all=row.getTable().getData(); if(all.filter(r => r.Code === d.Code).length > 1){ row.getElement().style.backgroundColor='#ffcccc'; }}\",\n            columns: [\n                { title: \"Code\", field: \"Code\", widthGrow: 20, tooltip: true },\n                { title: \"Produs\", field: \"Produs\", widthGrow: 25, tooltip: true },\n                { title: \"In/out\", field: \"In/out\", widthGrow: 7, hozAlign: \"center\" },\n                { title: \"Locatie\", field: \"Locatie\", widthGrow: 8, tooltip: true },\n                { title: \"Data\", field: \"Data\", widthGrow: 9, hozAlign: \"center\" },\n                { title: \"Ora\", field: \"Ora\", widthGrow: 6, hozAlign: \"center\" },\n                { title: \"Comentarii\", field: \"Comentarii\", widthGrow: 15, tooltip: true },\n                { title: \"Nr Comanda\", field: \"Nr Comanda\", widthGrow: 10, tooltip: true },\n                { title: \"ID\", field: \"id\", visible: false }\n            ]\n\n        }\n    }\n};\n\n// ❌ Coloana X de ștergere\nlet tabelX = {\n    payload: tableData.map(item => ({\n        id: item.id,\n        x: \"<span style='color:red;font-weight:bold;text-align:center;cursor:pointer;'>X</span>\"\n    })),\n    ui_control: {\n    tabulator: {\n        layout: \"fitDataFill\",  // 🧠 Aceasta umple spațiul disponibil\n        columns: [\n            {\n                title: \"X\",\n                field: \"x\",\n                formatter: \"html\",\n                width: \"100%\",\n                hozAlign: \"center\"\n            }\n        ]\n    }\n}\n\n};\n\n// ⛔ Curăță câmpul „Scan Here”\nmsg.payload = \"\";\nmsg.topic = \"clearScan\";\n\nreturn [msg, tabelaPrincipala, tabelX];\n",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 780,
        "y": 580,
        "wires": [
            [
                "fa7f53b9aa29885b"
            ],
            [
                "d8547a0e15b53cf0"
            ],
            [
                "09a71c373c747474"
            ]
        ]
    },
    {
        "id": "5db3dd4ed3c5ab82",
        "type": "function",
        "z": "b1c56fddda3ae2eb",
        "name": "produs",
        "func": "flow.set(\"produs\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "5f55785332b0cc3f",
        "type": "function",
        "z": "b1c56fddda3ae2eb",
        "name": "actiune",
        "func": "flow.set(\"actiune\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "990aeb86c8056b48",
        "type": "function",
        "z": "b1c56fddda3ae2eb",
        "name": "locatie",
        "func": "flow.set(\"locatie\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1050,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "2babb2ed19e47cdd",
        "type": "function",
        "z": "b1c56fddda3ae2eb",
        "name": "comanda",
        "func": "flow.set(\"comanda\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "b44e4ec6cadb697e",
        "type": "function",
        "z": "b1c56fddda3ae2eb",
        "name": "comentarii",
        "func": "flow.set(\"comentarii\", msg.payload);\nreturn null;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1070,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "d8547a0e15b53cf0",
        "type": "ui_table",
        "z": "b1c56fddda3ae2eb",
        "group": "f872f36e4f84edb3",
        "name": "main",
        "order": 10,
        "width": 15,
        "height": 22,
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 1090,
        "y": 560,
        "wires": []
    },
    {
        "id": "09a71c373c747474",
        "type": "ui_table",
        "z": "b1c56fddda3ae2eb",
        "group": "f872f36e4f84edb3",
        "name": "x",
        "order": 9,
        "width": 1,
        "height": 22,
        "columns": [],
        "outputs": 1,
        "cts": true,
        "x": 1090,
        "y": 620,
        "wires": [
            [
                "5d2c09a82373556e"
            ]
        ]
    },
    {
        "id": "90e99bc0c3e7bd2a",
        "type": "function",
        "z": "b1c56fddda3ae2eb",
        "name": "function 23",
        "func": "let id = msg.payload?.id;\n\nlet entries = flow.get(\"entries\") || [];\n\n// Șterge elementul cu id-ul transmis\nentries = entries.filter(entry => entry.id !== id);\nflow.set(\"entries\", entries);\n\n\nlet tableData = entries;\n\nlet tabelaPrincipala = {\n    payload: tableData,\n    ui_control: {\n        tabulator: {\n            layout: \"fitData\",\n            rowFormatter: \"function(row){ const d=row.getData(); const all=row.getTable().getData(); if(all.filter(r => r.Code === d.Code).length > 1){ row.getElement().style.backgroundColor='#ffcccc'; }}\"\n        }\n    }\n};\n\nlet tabelX = {\n    payload: tableData.map(item => ({\n        id: item.id,\n        x: \"<span style='color:red;font-weight:bold;cursor:pointer;'>X</span>\"\n    })),\n    ui_control: {\n        tabulator: {\n            layout: \"fitData\",\n            columns: [\n                {\n                    title: \"X\",\n                    field: \"x\",\n                    formatter: \"html\",\n                    width: 40\n                }\n            ]\n        }\n    }\n};\n\nreturn [tabelaPrincipala, tabelX];\n",
        "outputs": 2,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 680,
        "wires": [
            [
                "d8547a0e15b53cf0"
            ],
            [
                "09a71c373c747474"
            ]
        ]
    },
    {
        "id": "5d2c09a82373556e",
        "type": "function",
        "z": "b1c56fddda3ae2eb",
        "name": "function 24",
        "func": "msg.payload = { id: msg.payload.id };\nreturn msg;\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 690,
        "y": 680,
        "wires": [
            [
                "90e99bc0c3e7bd2a"
            ]
        ]
    },
    {
        "id": "2248096d2dee7afa",
        "type": "function",
        "z": "b1c56fddda3ae2eb",
        "name": "clean",
        "func": "flow.set(\"entries\", []);\nreturn [\n    { payload: [] }, // main table\n    { payload: [] }  // x table\n];\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 190,
        "y": 600,
        "wires": [
            [
                "09a71c373c747474",
                "d8547a0e15b53cf0"
            ]
        ]
    },
    {
        "id": "ac31e64b82ffaf11",
        "type": "ui_button",
        "z": "b1c56fddda3ae2eb",
        "name": "",
        "group": "f872f36e4f84edb3",
        "order": 5,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "Send →",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "mail",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 160,
        "y": 720,
        "wires": [
            [
                "d28c0701edcb9363"
            ]
        ]
    },
    {
        "id": "d28c0701edcb9363",
        "type": "function",
        "z": "b1c56fddda3ae2eb",
        "name": "prepare for gsheet",
        "func": "let entries = flow.get(\"entries\") || [];\n\nmsg.payload = entries.map(row => [\n    row[\"Code\"],\n    row[\"Produs\"],\n    row[\"In/out\"],\n    row[\"Locatie\"],\n    row[\"Data\"],\n    row[\"Ora\"],\n    row[\"Comentarii\"],\n    row[\"Nr Comanda\"]\n]);\n\nreturn msg;  // trimite doar către nodul de append la Sheet\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 740,
        "wires": [
            [
                "10d650825afdcbc7",
                "2248096d2dee7afa"
            ]
        ]
    },
    {
        "id": "10d650825afdcbc7",
        "type": "GSheet",
        "z": "b1c56fddda3ae2eb",
        "creds": "be12146d67b1f521",
        "method": "append",
        "action": "",
        "sheet": "17oi3Jrnrd_K0y4p8-Sr6G14zEb2RDWmlhMci24xCgqU",
        "cells": "istoric!A101:h9999",
        "flatten": false,
        "name": "istoric append",
        "x": 520,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "fa7f53b9aa29885b",
        "type": "ui_template",
        "z": "b1c56fddda3ae2eb",
        "group": "f872f36e4f84edb3",
        "name": "",
        "order": 6,
        "width": 7,
        "height": 1,
        "format": "<textarea id=\"scanField\" \n    placeholder=\"Scaneaza Codul Aici!\" \n    style=\"\n        width: 100%;\n        height: 100%;\n        font-size: 16px;\n        padding: 8px;\n        margin: 0;\n        border: 2px solid #000;\n        border-radius: 4px;\n        box-sizing: border-box;\n        line-height: 1.4;\n        resize: none;\n        overflow: hidden;\n        vertical-align: middle;\n        appearance: none;\n        -webkit-appearance: none;\n        -moz-appearance: none;\n    \">\n</textarea>\n<script>\n    (function(scope) {\n    let debounce;\n\n    const sendLines = () => {\n        const raw = document.getElementById(\"scanField\").value;\n        const lines = raw.split(/\\r?\\n/).map(l => l.trim()).filter(l => l);\n\n        for (let line of lines) {\n            scope.send({ payload: line });\n        }\n\n        document.getElementById(\"scanField\").value = \"\"; // 🧽 Clean field\n    };\n\n    document.getElementById(\"scanField\").addEventListener(\"keydown\", function(e) {\n        if (e.key === \"Enter\") {\n            clearTimeout(debounce);\n            debounce = setTimeout(() => {\n                sendLines();\n            }, 50);\n        }\n    });\n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 620,
        "y": 520,
        "wires": [
            [
                "ec036cb691d076f9"
            ]
        ]
    },
    {
        "id": "reincarcare_sheets",
        "type": "ui_button",
        "z": "b1c56fddda3ae2eb",
        "name": "Reîncarcă Sheeturi",
        "group": "f872f36e4f84edb3",
        "order": 1,
        "width": 2,
        "height": 1,
        "passthru": false,
        "label": "ok",
        "tooltip": "reincarca legatura",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "refresh",
        "payload": "",
        "payloadType": "str",
        "topic": "",
        "topicType": "str",
        "x": 790,
        "y": 180,
        "wires": [
            [
                "init_sheet_trigger",
                "verifica_incarcare"
            ]
        ]
    },
    {
        "id": "init_sheet_trigger",
        "type": "function",
        "z": "b1c56fddda3ae2eb",
        "name": "Inițializează Sheeturi",
        "func": "// Pornim trigger către cele 2 noduri de Sheet\nreturn [{ topic: \"reincarcare\" }, { topic: \"reincarcare\" }];",
        "outputs": 2,
        "noerr": 0,
        "x": 340,
        "y": 120,
        "wires": [
            [
                "e23602bb8ba499f7"
            ],
            [
                "32fe2e1eee500492"
            ]
        ]
    },
    {
        "id": "verifica_incarcare",
        "type": "function",
        "z": "b1c56fddda3ae2eb",
        "name": "Verifică încărcare",
        "func": "if (!Array.isArray(msg.payload)) {\n    return {\n        ui_control: {\n            callback: \"sheetReload\",\n            label: \"❌ Eșuat - Net?\"\n        }\n    };\n}\n\nreturn {\n    ui_control: {\n        callback: \"sheetReload\",\n        label: \"✅ Sheet OK\"\n    }\n};",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 220,
        "wires": [
            [
                "reincarcare_sheets"
            ]
        ]
    }
]